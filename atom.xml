<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>素颜的博客~</title>
  
  
  <link href="http://suyanblog.cn/atom.xml" rel="self"/>
  
  <link href="http://suyanblog.cn/"/>
  <updated>2025-08-06T00:00:00.000Z</updated>
  <id>http://suyanblog.cn/</id>
  
  <author>
    <name>素颜</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>25年电赛总结</title>
    <link href="http://suyanblog.cn/25_elc/"/>
    <id>http://suyanblog.cn/25_elc/</id>
    <published>2025-08-06T00:00:00.000Z</published>
    <updated>2025-08-06T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>25电赛，昨天结束了，我的实验室生涯也结束了。最后一舞还是没有做到。<br>你要说遗憾吗，那多少肯定是有的，参加过两届电赛，国一还是没摸到。<br>但其实也没有什么好可惜的，这十几天的备赛，做题，也让我获益良多，看到了之前很多没有看到的东西，对控制的理解也更深一层。<br>我认为这段经历是值得的，不管是从学习控制，还是认识自己上</p><p>之前感觉控制，就是输入输出，再带一个反馈，当时对这些感觉都是很抽象的，就像是理所应当的那样。<br>对控制的理解不到位，也给今年的国赛控制题埋下了伏笔，其实很早之前就有这个问题了，比如23年的激光打靶，或者是倒立摆，这些强控制题，我做的都很差。<br>对于这种需要分析系统，调整控制策略方法的题，我都很不擅长。之前做的好的题都是一些弱控制，重流程的题，比如24年的三子棋，21年的送药小车这种只需要扣逻辑，写过程的题。</p><p>而且对于这种流程问题，现在AI语言模型已经比较成熟了，用中文写代码完全不是问题。说是写代码，其实大部分时间都是在调试，debug，毕竟这部分工作ai是没办法帮你做的。<br>他们也做不到分析系统，控制系统。这其实也是控制的两个方向，一个过程控制，一个运动控制。而我认为的控制，其实是在后者的。</p><p>今年到最后，所有的控制过程其实都分析的很透彻了，用陀螺仪去补偿掉小车的转弯角度误差，用编码器控制位置消除掉小车运动轨迹带来的误差，最后用位置增量累加控制步进电机+pid实现闭环打靶。<br>只可惜时间不太够了，最后这三个值累加到一块的现象总是不太理想，也没有什么头绪，赛后才后知后觉，驱动电机的方式可能不太对。驱动电机策略上的失误，使得其性能本来就不足以完成闭环打靶，最后怎么调也出不来现象。<br>临门一脚，就是差在了这个地方。</p><p>最后时间很紧张，运动函数又是最底层的东西。最后也是没考虑好，有时候只差一点，放在其他地方就是差很多啊。<br>这次电赛让我看到了自己对控制的不足，也亲身感受到了控制的魅力。要学会如何去分析系统，理解其内部运作的过程，进而施加控制手段，最终达成控制目标的目的。<br>系统的阶数，响应，反馈，误差分析，用什么控制手段，在哪用怎么用。这些都是需要经验，需要理解的。</p><p>虽然我对控制做的不是很好，但是我觉得我可以做出更多更好的努力，争取在控制领域做出一点属于自己的成果，这可能是我接下来，或者说近几年，年轻时候的目标吧。</p><p>这次电赛，也有很多研0的学长跟我们站在一眼，对我们的电赛指导做出了不可磨灭的贡献，不为什么，就是热爱，单纯冲着这份情感，实验室的传承精神，<br>从开赛前的准备阶段，再到开赛时候的比赛阶段，最终比赛时候的后勤工作，都有学长的无私奉献，真的是感受到了实验室大家庭的温暖，太奉献了，这份感动是我无以言表的，我会永远记住这份情感，并带着它传承下去。</p><p><img src="/pic/post/25TI1.jpg" alt="25TI1.jpg"></p><p>姚老师还在计算<br><img src="/pic/post/25TI2.jpg" alt="25TI2.jpg"></p><p>不灭钻石<br><img src="/pic/post/25TI4.jpg" alt="25TI4.jpg"></p><p>最后还有两小只的无敌作画<br><img src="/pic/post/25TI3.jpg" alt="25TI3.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;25电赛，昨天结束了，我的实验室生涯也结束了。最后一舞还是没有做到。&lt;br&gt;你要说遗憾吗，那多少肯定是有的，参加过两届电赛，国一还是没摸到。&lt;br&gt;但其实也没有什么好可惜的，这十几天的备赛，做题，也让我获益良多，看到了之前很多没有看到的东西，对控制的理解也更深一层。&lt;br&gt;</summary>
      
    
    
    
    <category term="嵌入式" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>Maixcam,Trigger signal, code:SIGSEGV(11)! 报错</title>
    <link href="http://suyanblog.cn/maixcam2/"/>
    <id>http://suyanblog.cn/maixcam2/</id>
    <published>2025-05-24T00:00:00.000Z</published>
    <updated>2025-05-24T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>1、今天在设计按键功能时，调用Find_rec函数处理图像，出现了出现了Trigger signal, code:SIGSEGV(11)!报错，</p><p>代码如下，部分省略</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">def find_rec(img):</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    # img = cam.read()</span><br><span class="line">    # img.lens_corr(strength=1.7)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    img_rec = image.image2cv(img, False, False).copy()</span><br><span class="line">    </span><br><span class="line">    gray_rec = cv2.cvtColor(img_rec, cv2.COLOR_RGB2GRAY)</span><br><span class="line">    </span><br><span class="line">    # 边缘检测</span><br><span class="line">    edges = cv2.Canny(gray_rec, 150, 250)</span><br><span class="line">    kernel = np.ones((4, 4), np.uint8)</span><br><span class="line">    dilated = cv2.dilate(edges, kernel, iterations=1)</span><br><span class="line"></span><br><span class="line">    # 轮廓检测</span><br><span class="line">    contours, _ = cv2.findContours(dilated, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)</span><br><span class="line">    if len(contours) &gt; 0:</span><br><span class="line">        # 筛选出最大的轮廓</span><br><span class="line">        largest_contour = max(contours, key=cv2.contourArea)</span><br><span class="line">        </span><br><span class="line">        epsilon = 0.02 * cv2.arcLength(largest_contour, True)</span><br><span class="line">        approx = cv2.approxPolyDP(largest_contour, epsilon, True)</span><br><span class="line">            </span><br><span class="line">            # filtered_approx = remove_duplicate_points(approx)</span><br><span class="line">        num_vertices = len(approx)</span><br><span class="line"></span><br><span class="line">                        </span><br><span class="line">    img_show = image.cv2image(img_rec, False, False)</span><br><span class="line"></span><br><span class="line">    print(&quot;img OK&quot;)</span><br><span class="line"></span><br><span class="line">    # disp.show(img_show)    </span><br><span class="line">    return img_show</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2、Find_rec 函数单独调用是正常使用的，放在UI里进行按键触发，就会出bug。</p><p>一开始以为图像已经被释放或修改，在多个地方print，处理后的图像传递引用img.copy副本，问题也没有解决</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(&quot;img format:&quot;, img.format())</span><br><span class="line">print(&quot;img size:&quot;, img.width(), img.height())</span><br><span class="line">print(&quot;img type:&quot;, type(img))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">if start_press:</span><br><span class="line">    </span><br><span class="line">    infoimg = image.Image(disp.width(), disp.height(), image.Format.FMT_RGB888)</span><br><span class="line">    infoimg.draw_string(</span><br><span class="line">        disp.width() // 2 - 80, disp.height() // 2, &quot;EXITING...&quot;, </span><br><span class="line">        color=iRGB(255, 0, 0), scale=2</span><br><span class="line">    )</span><br><span class="line">    </span><br><span class="line">    # processed_img = infoimg </span><br><span class="line">    </span><br><span class="line">    processed_img = find_rec(img.copy())  # 传入新拷贝</span><br><span class="line"></span><br><span class="line">    if Ex_fun_press:</span><br><span class="line">        start_press = False</span><br><span class="line">    </span><br><span class="line">    if processed_img:</span><br><span class="line">        # 显示前验证</span><br><span class="line">        if processed_img.format() == image.Format.FMT_RGB888:</span><br><span class="line">            print(&quot;format success&quot;)</span><br><span class="line">            return True, processed_img.copy()</span><br><span class="line">            </span><br><span class="line">    # 失败时返回原始图像</span><br><span class="line">    print(&quot;fail&quot;)</span><br><span class="line">    return True, img.copy()</span><br></pre></td></tr></table></figure><p>3、如果不调用Find_rec函数，而是新建一张图片，是可以正常显示的<br>说明不是外部逻辑问题，是函数内部出了问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">def find_rec(img):</span><br><span class="line">    img_rec = image.image2cv(img, False, False).copy()</span><br><span class="line">    img_show = image.cv2image(img_rec, False, False)</span><br><span class="line">    print(&quot;img OK&quot;)</span><br><span class="line">    return img_show</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4、后面我删掉多余的处理函数，还是有问题<br>在 find_rec(img) 的最后，创建一个新的稳定图像对象，并将转换后的图像绘制到这个图像上，问题得到解决</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def find_rec(img):</span><br><span class="line">    img_rec = image.image2cv(img, False, False).copy()</span><br><span class="line">    img_show = image.cv2image(img_rec, False, False)</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">    stable_img = image.Image(img_show.width(), img_show.height(), image.Format.FMT_RGB888)</span><br><span class="line">    stable_img.draw_image(0, 0, img_show)</span><br><span class="line"></span><br><span class="line">    return stable_img</span><br></pre></td></tr></table></figure><h2 id="总结：为什么前面都“看着没问题但还是崩溃”"><a href="#总结：为什么前面都“看着没问题但还是崩溃”" class="headerlink" title="总结：为什么前面都“看着没问题但还是崩溃”"></a>总结：为什么前面都“看着没问题但还是崩溃”</h2><p>cv2image() 返回的 image.Image 实际上是 C 层快速构造的临时对象，它不像用 image.Image() 构造的那样“稳定”可控。</p><p>所以 只要任何时候用过 cv2image()，在 return 之前必须 draw_image() 到一个新图像中，确保内存托管在 Python 层。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1、今天在设计按键功能时，调用Find_rec函数处理图像，出现了出现了Trigger signal, code:SIGSEGV(11)!报错，&lt;/p&gt;
&lt;p&gt;代码如下，部分省略&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;</summary>
      
    
    
    
    <category term="嵌入式" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="maixpy" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/maixpy/"/>
    
    
  </entry>
  
  <entry>
    <title>25年的小坑</title>
    <link href="http://suyanblog.cn/plan3/"/>
    <id>http://suyanblog.cn/plan3/</id>
    <published>2025-01-06T23:41:12.000Z</published>
    <updated>2025-01-06T23:41:12.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1月6日更新"><a href="#1月6日更新" class="headerlink" title="1月6日更新"></a>1月6日更新</h1><p>其实是寒假的第一晚<br>所以得好好计划一下时间</p><h2 id="学习方面"><a href="#学习方面" class="headerlink" title="学习方面"></a>学习方面</h2><p>1.看高数课，得有，得把题，笔记都得记一记<br>2.sciencedaily，稍微看一点阅读，英语不能丢</p><h2 id="生活方面"><a href="#生活方面" class="headerlink" title="生活方面"></a>生活方面</h2><p>1.如果有可能的话，可以找人小打一手球，锻炼一下身体<br>2.烤鸡 烤蛋挞有没有说法<br>3.</p><h1 id="1月24日更新"><a href="#1月24日更新" class="headerlink" title="1月24日更新"></a>1月24日更新</h1><p>人是无时无刻不再改变的，可能我们只是需要一个契机，去想明白为什么改变，如何改变。<br>结束了碌碌无为的大三上，也是逐步准备开始考研<br>或许我应该想明白我想要做什么，是把学习与生活分割，延续着学生的思维，还是将其融入生活，成为自己的日常。<br>我需要一个纯粹的目标，一个方向，不涉及什么功利，可能是爱好，兴趣，是一件长期让我坚持的事情，以此来度过我的余生<br>其实学习就是一件很枯燥的事情，他可能在很长的周期里看不到任何收益，但是这个过程会锻炼你的思维，你的能力。作为一个只有年龄可能作为优势的普通人，最好的打法应该是多去尝试，尽可能的收集信息，也尽早利用时间建立优势。<br>其实有时候适当的前期投入，会带来很大的回报，要不计成本的多去做一些尝试，多思考，然后重复这个过程，复刻自己的进步，</p><p>学会独处，拥抱自己。</p><h2 id="改变"><a href="#改变" class="headerlink" title="改变"></a>改变</h2><p>至少我应该把时间花在真正愉悦自己的事情上<br>我不应该期待路人给我带来什么正反馈，都是消遣</p><p>或许我应该写一个行事准则，无时不刻提醒自己，直到养成习惯</p><p>或许做一件事情不应该拖延，想到了就应该立刻去做，即使你感到很不舒服</p><h2 id="寒假目标"><a href="#寒假目标" class="headerlink" title="寒假目标"></a>寒假目标</h2><p>1.把能更新到的数学网课都给看了，到手的题都要写一遍<br>2.把numpy，opencv 函数都用一遍，去做一些应用，比如勾选框，识别图中的某个特别物体，在这个基础上做一些应用。<br>3.我还是很想尝试一下dma，研究固件，在这个基础上去做一些开发，嵌入式方面的。<br>了解一下双机ai的实现，嵌入式的组成及其原理。<br>如果是这一方面的话就可以去找一些书籍，去阅读，而不是一些碎片知识。<br>4.可能需要再装一台电脑？ 感觉瓦的号也可以出了，换台电脑回来，预算大概是2k？</p><h1 id="2月22日更新"><a href="#2月22日更新" class="headerlink" title="2月22日更新"></a>2月22日更新</h1><ol><li>开学之，进行一手规律的作息，比如八点起床</li><li>早上可以进行一手单词的背，然后看数学课，下午就直接整理，然后做题</li><li>进行一手电赛的准备，如果可以，就把单片机拿过来，买个舵机，电机，狠狠的调，还有摄像头的使用</li></ol><h1 id="2月28日更新"><a href="#2月28日更新" class="headerlink" title="2月28日更新"></a>2月28日更新</h1><h2 id="电赛"><a href="#电赛" class="headerlink" title="电赛"></a>电赛</h2><p>1.菜单优化，把参数尽可能的可控可调，优化调试成本<br>2.蓝牙的使用，usart传参的稳定性<br>3.opencv，识别矩形以及其他各种图形，颜色<br>4.舵机的使用</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1月6日更新&quot;&gt;&lt;a href=&quot;#1月6日更新&quot; class=&quot;headerlink&quot; title=&quot;1月6日更新&quot;&gt;&lt;/a&gt;1月6日更新&lt;/h1&gt;&lt;p&gt;其实是寒假的第一晚&lt;br&gt;所以得好好计划一下时间&lt;/p&gt;
&lt;h2 id=&quot;学习方面&quot;&gt;&lt;a href=&quot;#学</summary>
      
    
    
    
    <category term="未来日记" scheme="http://suyanblog.cn/categories/%E6%9C%AA%E6%9D%A5%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>25年的年度总结？</title>
    <link href="http://suyanblog.cn/year25/"/>
    <id>http://suyanblog.cn/year25/</id>
    <published>2025-01-06T23:18:12.000Z</published>
    <updated>2025-01-06T23:18:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>好像是25年的第一坑，经典回首过往，又是一年，是的又过了一年的一年<br>快乐的瞬间总是转瞬即逝，藏匿在记忆碎片中，或许某个偶然，又在某个角落拾起，可能又会触景生情，怀念起某个时间吧<br>我不知道写这种东西会给我带来什么，可能只是为了许多年后，让我记起，一块玩泰拉瑞亚，赶期末考试，吃韭菜鸡蛋饺子（但是他们好像吃的是白菜肉的，畅聊以后的这段时间吧<br>可能游戏再也不会打开，饺子也不会再吃，人也不会再聚<br>我以后会以什么姿势打开这篇文章，或者是以一种什么样的心态<br>还是想要记住更多东西</p><p>其实本来是想做成一个年度总结的，但是感觉又总结不出啥来，总之总之，新的一年还是得好好干啊，努力赚钱打工，努力学习，享受生活:P</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;好像是25年的第一坑，经典回首过往，又是一年，是的又过了一年的一年&lt;br&gt;快乐的瞬间总是转瞬即逝，藏匿在记忆碎片中，或许某个偶然，又在某个角落拾起，可能又会触景生情，怀念起某个时间吧&lt;br&gt;我不知道写这种东西会给我带来什么，可能只是为了许多年后，让我记起，一块玩泰拉瑞亚，赶</summary>
      
    
    
    
    <category term="未来日记" scheme="http://suyanblog.cn/categories/%E6%9C%AA%E6%9D%A5%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Apex的一些交流术语</title>
    <link href="http://suyanblog.cn/gamecommunicate/"/>
    <id>http://suyanblog.cn/gamecommunicate/</id>
    <published>2024-12-25T15:02:33.000Z</published>
    <updated>2024-12-25T15:02:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>因为队友老是不听话，所以打算记一些简单的术语用于指挥</p><h1 id="称呼"><a href="#称呼" class="headerlink" title="称呼"></a>称呼</h1><p> dude</p><h2 id="英雄名称-技能"><a href="#英雄名称-技能" class="headerlink" title="英雄名称 &#x2F; 技能"></a>英雄名称 &#x2F; 技能</h2><p>bloodhound  &#x2F;scan<br>gibraltar&#x2F;gibby&#x2F;bomb<br>lifeline<br>pathfinder<br>wraith&#x2F;phasing<br>bangalore&#x2F;smoke&#x2F;air stike<br>caustic&#x2F;gas  &#x2F;trap<br>mirage&#x2F;decoy<br>octane<br>wattson<br>crypto&#x2F;emp<br>revenant<br>loba&#x2F;black market<br>rampart<br>horizon&#x2F;black hole<br>fuse<br>valkyrie&#x2F;valk</p><h2 id="物资"><a href="#物资" class="headerlink" title="物资"></a>物资</h2><p>shield<br>purple&#x2F;gold&#x2F;red&#x2F;amour<br>ultmate accel</p><h2 id="地图"><a href="#地图" class="headerlink" title="地图"></a>地图</h2><p>tunnel<br>truck<br>rock<br>stone</p><p>bottom floor 房区&#x2F;最底层<br>top floor<br>second floor<br>third floor</p><h1 id="敌方-我方状态"><a href="#敌方-我方状态" class="headerlink" title="敌方&#x2F;我方状态"></a>敌方&#x2F;我方状态</h1><p>blood no shield</p><p>reloading</p><p>throw nade  &#x2F;  burning</p><p>zipline jumppad</p><p>ultimate</p><p>lag 卡了</p><h1 id="敌方状态"><a href="#敌方状态" class="headerlink" title="敌方状态"></a>敌方状态</h1><p>race out&#x2F;droping</p><p>revive</p><h1 id="战场信息"><a href="#战场信息" class="headerlink" title="战场信息"></a>战场信息</h1><p>there are inside</p><p>roof&#x2F;wall</p><p>bad place &#x2F;we havenot any vision of them</p><p>four team below&#x2F;above us&#x2F; ahead of us &#x2F;behind</p><p>notice the bridge&#x2F;tower</p><h1 id="行为动作-指示"><a href="#行为动作-指示" class="headerlink" title="行为动作&#x2F;指示"></a>行为动作&#x2F;指示</h1><p>Keep Cool</p><p>join the ring&#x2F;zone</p><p>gather around</p><p>retreat</p><p>stay back</p><p>we can take the high ground to defend them</p><h1 id="鼓励"><a href="#鼓励" class="headerlink" title="鼓励"></a>鼓励</h1><p>nice try</p><p>good job</p><h1 id="骂人的"><a href="#骂人的" class="headerlink" title="骂人的"></a>骂人的</h1><p>idiot</p><p>noob</p><p>you fool</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;因为队友老是不听话，所以打算记一些简单的术语用于指挥&lt;/p&gt;
&lt;h1 id=&quot;称呼&quot;&gt;&lt;a href=&quot;#称呼&quot; class=&quot;headerlink&quot; title=&quot;称呼&quot;&gt;&lt;/a&gt;称呼&lt;/h1&gt;&lt;p&gt; dude&lt;/p&gt;
&lt;h2 id=&quot;英雄名称-技能&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="游戏" scheme="http://suyanblog.cn/categories/%E6%B8%B8%E6%88%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>Always be alone</title>
    <link href="http://suyanblog.cn/alone1/"/>
    <id>http://suyanblog.cn/alone1/</id>
    <published>2024-12-02T15:46:23.000Z</published>
    <updated>2024-12-02T15:46:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>其实，每个人都有自己属于自己的盒子，或大或小<br>社交就像是从盒子里，拿出一部分，互相展示<br>很偶然拿出了相同的东西<br>所以成了朋友</p><p>每天盒子都会塞进新的东西，也有旧的东西被剔除，或者是随着时间推移再也互相看不到手里的东西，总之盒子被关上了，挂上了锁</p><p>但是盒子应该被关上</p><p>社交就是在纯纯的花时间，然后有小概率开到ssr</p><p>其实可以，尝试一下社交，哎</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;其实，每个人都有自己属于自己的盒子，或大或小&lt;br&gt;社交就像是从盒子里，拿出一部分，互相展示&lt;br&gt;很偶然拿出了相同的东西&lt;br&gt;所以成了朋友&lt;/p&gt;
&lt;p&gt;每天盒子都会塞进新的东西，也有旧的东西被剔除，或者是随着时间推移再也互相看不到手里的东西，总之盒子被关上了，挂上了锁</summary>
      
    
    
    
    <category term="关于" scheme="http://suyanblog.cn/categories/%E5%85%B3%E4%BA%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>学校选择</title>
    <link href="http://suyanblog.cn/master/"/>
    <id>http://suyanblog.cn/master/</id>
    <published>2024-10-09T20:39:20.000Z</published>
    <updated>2024-10-09T21:37:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>读研究生总得选学校吧</p><h1 id="北京"><a href="#北京" class="headerlink" title="北京"></a>北京</h1><h2 id="北京理工大学"><a href="#北京理工大学" class="headerlink" title="北京理工大学"></a>北京理工大学</h2><h1 id="南京"><a href="#南京" class="headerlink" title="南京"></a>南京</h1><h2 id="东南大学"><a href="#东南大学" class="headerlink" title="东南大学"></a>东南大学</h2><p><a href="http://gsas.seu.edu.cn/ssmlcx2024/pages/index.html">东南大学2024年招收攻读硕士学位研究生专业目录</a><br><a href="https://xxgk.seu.edu.cn/2024/1008/c10807a505615/page.htm">东南大学2025年硕士研究生招生章程</a></p><h3 id="方向"><a href="#方向" class="headerlink" title="方向"></a>方向</h3><p>自动化学院：<br>081100（学术学位）控制科学与工程<br>招生54人<br>考试科目 11934(电路)+自控</p><p>085403（专业学位）集成电路工程<br>招生173人<br>考试科目 11928(电子技术基础，数模)+580半导体物理与器件</p><p>计算机科学与工程学院：</p><p>081200（学术学位）计算机科学与技术<br>招生58人<br>考试科目 11935(计算机专业基础)+C++程序设计</p><p>软件学院：<br>085405（专业学位）软件工程<br>招生46人<br>考试科目 11935(计算机专业基础)+C++程序设计</p><h2 id="南京大学"><a href="#南京大学" class="headerlink" title="南京大学"></a>南京大学</h2><h2 id="南京航空航天大学"><a href="#南京航空航天大学" class="headerlink" title="南京航空航天大学"></a>南京航空航天大学</h2><p><a href="https://yzsbm.nuaa.edu.cn/sszsml/index.html">2025年招收攻读硕士学位研究生专业目录</a><br><a href="https://yzsbm.nuaa.edu.cn/sskmdg/index.html">科目考试大纲</a></p><h3 id="方向-1"><a href="#方向-1" class="headerlink" title="方向"></a>方向</h3><p>081100（学术学位）控制科学与工程</p><pre><code>01（全日制）控制理论与控制工程02（全日制）检测技术与自动化装置03（全日制）系统工程04（全日制）模式识别与智能系统05（全日制）导航、制导与控制①101思想政治理论②201英语（一）③301数学（一）④820自动控制原理复试科目：①531控制系统设计基础招73</code></pre><p>085406（专业学位）控制工程<br>    01（全日制）控制理论与控制工程<br>    02（全日制）检测技术与自动化装置<br>    03（全日制）系统工程<br>    04（全日制）模式识别与智能系统<br>    05（全日制）导航、制导与控制<br>    FF（非全日制）研究方向不区分</p><pre><code>①101思想政治理论②201英语（一）③302数学（二）④820自动控制原理复试科目：①531控制系统设计基础招80</code></pre><h1 id="学硕"><a href="#学硕" class="headerlink" title="学硕"></a>学硕</h1><p>录取均分340左右</p><p>优点：<br>分数线低，容易进复试，<br>报考人数较少，初试分高基本就稳了</p><p>统招人数扩的概率较大</p><p>学科大类，名字好听？</p><p>劣势：<br>数一内容多</p><h1 id="专硕"><a href="#专硕" class="headerlink" title="专硕"></a>专硕</h1><p>录取均分360左右</p><p>优点:<br>考数二，复习压力小</p><p>劣势：</p><p>竞争人数多，且重分人数多，复试可能被爆</p><p>25年录取很多，过线就要，26爆的概率很大</p><p>且可能缩招</p><h2 id="南京理工大学"><a href="#南京理工大学" class="headerlink" title="南京理工大学"></a>南京理工大学</h2><p><a href="https://gs.njust.edu.cn/_upload/article/files/71/53/7b332b0d44d18a118926c218e057/f3928315-cf11-4ed7-8910-9c5939ca1857.pdf">2025 年攻读硕士学位研究生招生专业目录</a></p><h3 id="方向-2"><a href="#方向-2" class="headerlink" title="方向"></a>方向</h3><p>106 计算机科学与工程学院:<br>（0811）控制科学与工程<br>（0812）计算机科学与技术<br>（0835）软件工程<br>（1405）智能科学与技术</p><p>均为11408+①程序设计（C++上机操作）②编译原理与算法设计</p><p>0854 电子信息<br>22408+编译原理与算法设计</p><p>总招生人数305</p><p>110 自动化学院 ：</p><p>（0808）电气工程<br>    11837（电路）+电力电子技术<br>（0811）控制科学与工程<br>    11873(自控)+微机原理与接口技术</p><p>（1405）智能科学与技术</p><p>（085406）控制工程（专业学位）<br>    22873(自控)+微机原理与接口技术</p><p>共招生400人</p><h1 id="天津"><a href="#天津" class="headerlink" title="天津"></a>天津</h1><h2 id="南开大学"><a href="#南开大学" class="headerlink" title="南开大学"></a>南开大学</h2><h2 id="天津大学"><a href="#天津大学" class="headerlink" title="天津大学"></a>天津大学</h2><h1 id="黑龙江"><a href="#黑龙江" class="headerlink" title="黑龙江"></a>黑龙江</h1><h2 id="哈工程"><a href="#哈工程" class="headerlink" title="哈工程"></a>哈工程</h2><p><a href="https://yzb.hrbeu.edu.cn/_upload/article/files/37/01/28de5a524fd6b8c3123f87dae54f/48703730-74a5-463c-8dd7-45c055b20586.pdf">哈尔滨工程大学2024年硕士招生专业目录</a></p><h3 id="方向-3"><a href="#方向-3" class="headerlink" title="方向"></a>方向</h3><p>004 智能科学与工程学院<br>    081100 控制科学与工程<br>    0811Z1 人工智能<br>        11808(自控)+微机原理<br>    085400 电子信息<br>总招220人</p><h1 id="湖北"><a href="#湖北" class="headerlink" title="湖北"></a>湖北</h1><h2 id="华中科技大学"><a href="#华中科技大学" class="headerlink" title="华中科技大学"></a>华中科技大学</h2><p><a href="https://yanzhao.hust.edu.cn/Master/Zsml_View.aspx">2025年硕士研究生招生专业目录</a></p><h3 id="方向-4"><a href="#方向-4" class="headerlink" title="方向"></a>方向</h3><p>184|人工智能与自动化院</p><pre><code>081100控制科学与工程（全日制）11829(自控，经典控制理论，现代控制理论)招生115人085406控制工程（全日制）11829(自控，经典控制理论，现代控制理论)招生 91人</code></pre><p>210|计算机科学与技术学院</p><pre><code>081200计算机科学与技术（全日制） 14311408085404计算机技术（全日制）169</code></pre><h2 id="武汉大学"><a href="#武汉大学" class="headerlink" title="武汉大学"></a>武汉大学</h2><h1 id="湖南"><a href="#湖南" class="headerlink" title="湖南"></a>湖南</h1><h2 id="中南大学"><a href="#中南大学" class="headerlink" title="中南大学"></a>中南大学</h2><h1 id="山西"><a href="#山西" class="headerlink" title="山西"></a>山西</h1><h2 id="太原理工大学"><a href="#太原理工大学" class="headerlink" title="太原理工大学"></a>太原理工大学</h2><p><a href="http://www.gs.tyut.edu.cn/2025zyml2.htm">太原理工大学2025年硕士研究生招生专业目录</a></p><h1 id="广东"><a href="#广东" class="headerlink" title="广东"></a>广东</h1><h2 id="暨南大学"><a href="#暨南大学" class="headerlink" title="暨南大学"></a>暨南大学</h2><p><a href="https://yz.jnu.edu.cn/2025nssyjszszyml/list.htm">2025年硕士研究生招生专业目录</a></p><h3 id="方向-5"><a href="#方向-5" class="headerlink" title="方向"></a>方向</h3><pre><code>085400电子信息(专业学位)1(全日制)电子与通信工程 招生46人2(全日制)人工智能 招生30人招生76人</code></pre><h2 id="华南理工大学"><a href="#华南理工大学" class="headerlink" title="华南理工大学"></a>华南理工大学</h2><h1 id="四川"><a href="#四川" class="headerlink" title="四川"></a>四川</h1><h2 id="电子科技大学"><a href="#电子科技大学" class="headerlink" title="电子科技大学"></a>电子科技大学</h2><h4 id="25-09-03-更新"><a href="#25-09-03-更新" class="headerlink" title="25.09.03 更新"></a>25.09.03 更新</h4><p>现在主要是在纠结是南航还是哈工程</p><p>南航优势：<br>1.地域上好很多，在南京周边就业，学校认可度可能会高，知名度高一点（但其实学校位置跟就业也没什么关系，主要还是看学科实力，以及个人能力吧，学历只是过筛选，哈工程跟南航就业，应该也是同一档的</p><p>2.南京毕竟是大城市，相对其他地方城市资源会好很多，包括娱乐之类，就是城市人文这方面，可能会认识到很多新的人，也是想找个女朋友之类的<br>（这一点存疑，因为我本身就不怎么出门，现在在青岛，也没有感觉到有什么新鲜的。而且研究生阶段可能会很忙，也不太会有时间去考虑这些</p><p>3.第三点就是个人意愿了，主要不太想留在山东了，多多少少想去其他城市看一看</p><p>以上 1 跟 3 的权重还是比较大的</p><p>劣势：<br>1.分数线高 要考到360左右 也就是均分至少 70+70+100+120<br>数学跟专业课好一点可能就是230 240左右，但是政治英语140 应该是不太好保证的，所以数学跟专业课还要高一点（现在是九月份，我不太清楚我能考到什么程度，但是我还是想给自己留容错，至少10几分吧，所以得提上限，而且江苏政治不算很水所以分数可能就是60，少的这部分分数还得数学 专业课补</p><p>2.往年南航都是有航天学院跟自动化学院的，都是考控制。但是今年航天学院改考，所以原本考航天院的人可能都会去自动化院，被爆的概率还是有的。</p><p>哈工程优势：<br>1.分数线比较低，70+60+90+100 平均分相对低一点，专业课因为比较难，所以哈工程100等效南航120<br>2.实验室有很多学长都在哈工程，复试会有稍许优势，而且未来进课题组，就业发展应该都不会太差，到时候选导师也都比较熟，心里都是有底的</p><p>劣势：<br>1.城市在青岛，我不太想在山东，想去其他城市看一看<br>2.</p><p>个人意愿：</p><p>1.首先就是考上研究生，这是最关键的，其次才是工作就业，城市</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;读研究生总得选学校吧&lt;/p&gt;
&lt;h1 id=&quot;北京&quot;&gt;&lt;a href=&quot;#北京&quot; class=&quot;headerlink&quot; title=&quot;北京&quot;&gt;&lt;/a&gt;北京&lt;/h1&gt;&lt;h2 id=&quot;北京理工大学&quot;&gt;&lt;a href=&quot;#北京理工大学&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    <category term="未来日记" scheme="http://suyanblog.cn/categories/%E6%9C%AA%E6%9D%A5%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>关于py控制台输入与直接赋值，导致执行结果不一致的</title>
    <link href="http://suyanblog.cn/pydaily/"/>
    <id>http://suyanblog.cn/pydaily/</id>
    <published>2024-10-06T20:33:20.000Z</published>
    <updated>2024-10-06T21:37:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>RT</p><p>涉案代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#这是一个用于显示菜单，并进行选择的代码</span><br><span class="line"></span><br><span class="line">def choose(</span><br><span class="line">        title: str,</span><br><span class="line">        options: tuple | list,</span><br><span class="line">        console: &quot;ColorfulConsole&quot;,</span><br><span class="line">        separate=None) -&gt; str:</span><br><span class="line">    screen = f&quot;&#123;title&#125;:\n&quot;</span><br><span class="line">    row = 0</span><br><span class="line">    for i, j in enumerate(options, start=1):</span><br><span class="line">        screen += f&quot;&#123;i: &gt;2d&#125;. &#123;j&#125;\n&quot;</span><br><span class="line">        if separate and row in separate:</span><br><span class="line">            screen += f&quot;&#123;&#x27;=&#x27; * 25&#125;\n&quot;</span><br><span class="line">        row += 1</span><br><span class="line">    return console.input(screen)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#  这是菜单选择功能代码</span><br><span class="line"></span><br><span class="line">    def run(self, default_mode: list):</span><br><span class="line">        self.default_mode = default_mode</span><br><span class="line">        with suppress(ValueError):</span><br><span class="line">            while self.running:</span><br><span class="line">                if not (select := safe_pop(self.default_mode)):</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    select = choose(</span><br><span class="line">                        &quot;请选择采集功能&quot;,</span><br><span class="line">                        [i for i, _ in self.__function],</span><br><span class="line">                        self.console)</span><br><span class="line"></span><br><span class="line">                    # select=5</span><br><span class="line">                    # print(select)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                if select in &#123;&quot;Q&quot;, &quot;q&quot;&#125;:</span><br><span class="line">                    self.running = False</span><br><span class="line">                elif not select:</span><br><span class="line">                    break</span><br><span class="line">                elif (n := int(select) - 1) in range(len(self.__function)):</span><br><span class="line">                    self.__function[n][1](safe_pop(self.default_mode))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当我在控制台输入数字时，功能是可以正常调用的，但是在直接给 select变量赋值时功能执行不正常。</p><p>后来发现是 整数与字符串的原因</p><p>在使用 <code>choose()</code> 函数时，用户通过控制台进行输入，返回值是一个字符串。例如，如果用户输入 <code>5</code>，<code>select</code> 就是字符串 <code>&quot;5&quot;</code>。之后，代码会将 <code>select</code> 转换为整数并进行判断。</p><p>直接赋值的是一个整数，而不是字符串。如果不再通过控制台输入，代码依然会执行 <code>int(select)</code> 转换，但是这里的 <code>select</code> 已经是整数了，继续转换时会报错，因为 <code>int()</code> 函数需要处理字符串，而非整数。<strong>这是为什么功能无法正常执行的原因</strong>。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>1.如果直接赋值给 <code>select</code>，应该确保跳过 <code>int()</code> 转换部分，或者直接处理整数。</p><p>2.即使手动赋值给 <code>select</code>，确保它是字符串形式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select = <span class="string">&quot;5&quot;</span></span><br></pre></td></tr></table></figure><hr><p>后来发现根本不是整数与字符串的问题，很莫名其妙，后来在菜单选择之前加了一个sleep后，功能就正常了&#x3D; &#x3D;<br>有点玄学</p><pre><code>    def run(self, default_mode: list):        self.default_mode = default_mode        with suppress(ValueError):            while self.running:                if not (select := safe_pop(self.default_mode)):                    select = choose(                        &quot;请选择采集功能&quot;,                        [i for i, _ in self.__function],                        self.console)                    # select=5                    # print(select)                if select in &#123;&quot;Q&quot;, &quot;q&quot;&#125;:                    self.running = False                elif not select:                    break                elif (n := int(select) - 1) in range(len(self.__function)):                                        time.sleep(0.5)                                        self.__function[n][1](safe_pop(self.default_mode))</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;RT&lt;/p&gt;
&lt;p&gt;涉案代码&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;lin</summary>
      
    
    
    
    <category term="解决方案" scheme="http://suyanblog.cn/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    <category term="python" scheme="http://suyanblog.cn/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/python/"/>
    
    
  </entry>
  
  <entry>
    <title>Always be alone</title>
    <link href="http://suyanblog.cn/alone/"/>
    <id>http://suyanblog.cn/alone/</id>
    <published>2024-09-09T15:46:23.000Z</published>
    <updated>2024-09-09T15:46:23.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>其实结不结婚都会后悔，<br>巷子里的猫很自由，却没有归宿；<br>围墙里的狗有归宿，终生都得低头；<br>人生这道题怎么选都会有遗憾。<br>               —-林徽因（民国诗人）</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;其实结不结婚都会后悔，&lt;br&gt;巷子里的猫很自由，却没有归宿；&lt;br&gt;围墙里的狗有归宿，终生都得低头；&lt;br&gt;人生这道题怎么选都会有遗憾。&lt;br&gt;               —-林徽因（民国诗人）&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="关于" scheme="http://suyanblog.cn/categories/%E5%85%B3%E4%BA%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>Windows 11修改C盘用户文件夹名称</title>
    <link href="http://suyanblog.cn/windows1/"/>
    <id>http://suyanblog.cn/windows1/</id>
    <published>2024-09-09T00:00:00.000Z</published>
    <updated>2024-09-09T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://izumi.pub/Windows/change-windows-username/">https://izumi.pub/Windows/change-windows-username/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://izumi.pub/Windows/change-windows-username/&quot;&gt;https://izumi.pub/Windows/change-windows-username/&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="解决方案" scheme="http://suyanblog.cn/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
  </entry>
  
  <entry>
    <title>三个大坑</title>
    <link href="http://suyanblog.cn/plan2/"/>
    <id>http://suyanblog.cn/plan2/</id>
    <published>2024-08-13T02:52:22.000Z</published>
    <updated>2024-12-23T11:18:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>哎，时间不等人啊<br>大学上半赛季已经结算了</p><p>社恐性格，或多或少有点改变吧，奇怪的社交经验增加了</p><p>关于人脉，其实也就那样，都是互利而已，哎<br>但是必须得有，面上得有，也没必要细究那么多</p><p>读了闲书几本，感觉还是颇有裨益的，能学到很多日常接触不到的知识，如果现实环境已经无法提供新的经验来源时<br>读书是个很好的选择</p><p>比赛 省一 省二，其实奖项倒是其次了，这个过程能学很多东西的，在实验室里，学技术，交朋友，还有工作上的关系处理之类的，感觉确实经历不少东西</p><p>技术栈的话，倒没必要搞太满，兴趣使然罢了，要啥学啥才是常态</p><p>下半赛季喽，马上毕业力</p><h1 id="8月13日更新"><a href="#8月13日更新" class="headerlink" title="8月13日更新"></a>8月13日更新</h1><p>假期的话</p><p>学做几个菜试试<br>（比如可乐鸡腿&#x2F;鸡翅</p><p>单词继续背吧，听力，还有作文也只能看油管了</p><p>书的话，可能也要读一点</p><p>更新一下博客，加点名言警句，顺便把文章归档一下</p><p>开学的话</p><p>据说还有考试</p><p>控制方向的书得猛看了，daily的看，</p><p>如果是技术栈方向的话 c++，试试写驱动？给maixcam做做开发</p><p>c# qt?</p><p>看看rtos，香橙派边缘ai开发，linux嵌入式</p><p>把cam边缘ai图像识别弄明白，做点开源项目</p><p>如果是比赛的话，cv也要学，python还是不太熟，舵机代码之类的还要看</p><p>小猫还有必要优化吗？需要的话再做</p><p>usart DMA? 还有什么fifo？<br>can总线 lin总线<br>Delay函数</p><p>可以玩3d打印机</p><p>试试写一个简历</p><h1 id="8月26日更新"><a href="#8月26日更新" class="headerlink" title="8月26日更新"></a>8月26日更新</h1><h2 id="所想"><a href="#所想" class="headerlink" title="所想"></a>所想</h2><p>1.关于运气 实力<br>2.如何理财<br>3.亚当斯密 商鞅，卢梭？</p><p>4.输入少了，看看油管，多水群</p><h2 id="闲暇"><a href="#闲暇" class="headerlink" title="闲暇"></a>闲暇</h2><p>1.虐完黑吗喽<br>2.打印机也可以玩，但是现在属实没想法</p><h2 id="技术"><a href="#技术" class="headerlink" title="技术"></a>技术</h2><p>1.cv作为工具，小看一手<br>2.c++ 方向的岗位？ qt做上位机的应该不少，c#呢，或者是lua<br>3.maixcam 开发，应该也能学很多东西，好像是</p><h3 id="嵌入式"><a href="#嵌入式" class="headerlink" title="嵌入式"></a>嵌入式</h3><p>1.rtos？<br>2.linux开发<br>3.驱动开发<br>4.fpga<br>5.或者是其他的交叉领域，网安？<br>6.arm芯片</p><h2 id="学校"><a href="#学校" class="headerlink" title="学校"></a>学校</h2><p>1.四六级，英语还得看，写作部分，听力部分<br>2.控制方面的书籍</p><h2 id="小项目"><a href="#小项目" class="headerlink" title="小项目"></a>小项目</h2><ol><li>fps ai锁完善一手<br> 虐一手c++，甚至还想开发内存挂<br> yolo也是大有可为，复盘一下这个项目吧</li></ol><p>2.复刻一个maa自动化程序<br>3.自动化考试软件</p><h2 id="杂七杂八"><a href="#杂七杂八" class="headerlink" title="杂七杂八"></a>杂七杂八</h2><p>1.卖课去</p><h1 id="9月13日更新"><a href="#9月13日更新" class="headerlink" title="9月13日更新"></a>9月13日更新</h1><p>byd最近一直在玩派克，沉迷派克，稍微花点心思就很容易进步，每次击杀胜利带来的正反馈太足了，所以才有了沉迷一说，但是学习大抵是没有的，所以显得很无聊。</p><p>知行合一，有想法就要去做，做到底</p><p>十月一要出去小旅一手，往北边走走，看看北京天津，东北</p><p>1.看院校，想想以后要去哪吧<br>2.这月就背单词看英语文章先<br>3.看控制课程<br>4.把kvm做出来捏</p><h1 id="10月9日更新"><a href="#10月9日更新" class="headerlink" title="10月9日更新"></a>10月9日更新</h1><h2 id="杂谈："><a href="#杂谈：" class="headerlink" title="杂谈："></a>杂谈：</h2><p>其实很多东西，也就是自己做着玩而已，兴趣当作借口，打发时间而已，也不指望以后能用上多少</p><p>至于思考以后做什么，不如先把眼前的事情做好，比如看好未来的城市，学校，以及考研方向</p><p>至于游戏。。感觉后面大部分时间只会玩单机了，lol玩的多少有点晕，都玩的难受了那为啥还得玩这b游戏，这不是纯纯吗。。。</p><p>研究生好像每年都在缩招，选择方面，也得多看看了</p><p>其实要出去玩的，但是也不知道去哪，其实还是没去，还是不够想去</p><h2 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h2><p>1.后面这几天 研究研究学校，以及分数之类的，加群进去水</p><p>2.上午还是看英语</p><p>3.看控制课吧，把笔记做好，或者说，偷个笔记看</p><p>4.实在无聊，就想想出去哪玩，可能心情会好一点</p><p>5.得换个环境，宿舍，心不平，神不宁，没法专注学习- -</p><ol start="5"><li>always be alone</li></ol><h1 id="11月4日更新"><a href="#11月4日更新" class="headerlink" title="11月4日更新"></a>11月4日更新</h1><h2 id="杂谈：-1"><a href="#杂谈：-1" class="headerlink" title="杂谈："></a>杂谈：</h2><ol><li><p>白天还是日常英语+控制，控制看课还是其次的，还是要花点时间看题</p></li><li><p>好像马上快考试了，得注意考试时间，提前看知识点复习，过了就行</p></li><li><p>小虐一手游戏，还是得</p></li><li><p>整点cv小项目看看，熟悉熟悉cv</p></li></ol><h2 id="目标："><a href="#目标：" class="headerlink" title="目标："></a>目标：</h2><ol><li><p>放假之前争取把控制过一遍，寒假就虐高数了</p></li><li><p>学校得多看看，水水群</p></li><li><p>六级提前拿两周出来复习，虐作文跟听力</p></li><li><p>寒假再多虐点菜 炒个鸡炖个鱼，红烧肉之类的 整点大菜</p></li></ol><h1 id="11月25日更新"><a href="#11月25日更新" class="headerlink" title="11月25日更新"></a>11月25日更新</h1><h2 id="最近"><a href="#最近" class="headerlink" title="最近"></a>最近</h2><ol><li><p>时间其实是有点空的，可以考虑把 数学 塞进来，最近好多课应该是结课了，得注意点考试时间</p></li><li><p>英语现在就可以开始做了，12月14日就得考六级了，刚好三周</p></li></ol><p>明天下午先开始准备一手，得打印往年题， 找作文材料，看看考试结构</p><p>虐一手听力，先一天一套，加上复盘时间，加上复听，</p><p>作文也是，得看课整理，第二天早上背一会，晚上再看看</p><p>阅读等题来猛搓完事了，搓不晕算我输</p><p>后面做题就得去教室了，卡时间模拟环境</p><ol start="3"><li><p>自控前面几章最起码都过了一遍<br>二三五章，题是还得二刷的，然后校正还得开<br>明天开始虐一手校正，把校正过完一遍之后把前面题都二刷，一路刷过来先<br>如果快的话我感觉这周应该是差不多了</p></li><li><p>杂事，可能就是项目课 实验课 还有悠悠了吧</p></li></ol><p>还是做不到吗？</p><h1 id="12月06日更新"><a href="#12月06日更新" class="headerlink" title="12月06日更新"></a>12月06日更新</h1><h2 id="最近-1"><a href="#最近-1" class="headerlink" title="最近"></a>最近</h2><p>1.这一个月都是考试，还有几科考试都挨在最底，所以可以抽空把 数学 或者是其他要考的课塞进来。<br>2.下午固定刷英语就完事了<br>3.周末把讨论课还有杂七杂八作业交一交，都过一遍，或者说是今下午。先看看作文整理一下，然后整理杂事。</p><h1 id="12月10日更新"><a href="#12月10日更新" class="headerlink" title="12月10日更新"></a>12月10日更新</h1><h2 id="最近-2"><a href="#最近-2" class="headerlink" title="最近"></a>最近</h2><p>1.还是高估了自己的执行力，还是不够严格<br>未来的一个月可能会制定一个行而有效的学习计划，尽量让自己稳定的进行学习<br>2.早上起来看看翻译跟作文句子，稍微背一背，然后做点阅读题，后面还是每天下午一套真题，出去做。<br>3.尽量调整作息成 118或者129，中午1点多点补个觉，两点多点出宿舍就行<br>晚上灵活安排吧，打会游戏看课</p><h1 id="12月23日更新"><a href="#12月23日更新" class="headerlink" title="12月23日更新"></a>12月23日更新</h1><h2 id="学校计划"><a href="#学校计划" class="headerlink" title="学校计划"></a>学校计划</h2><p>1.还有几门考试，每天都得看点英语，然后虐自控</p><h2 id="寒假的话"><a href="#寒假的话" class="headerlink" title="寒假的话"></a>寒假的话</h2><p>1.直接开高数，狠狠的搓课，看完课一定要跟上做题</p><p>2.顺便看看学校考的侧重点，可能得多买几本书看？电子书也行吧，加群水一水</p><p>3.可以学一手做菜，多学几手，什么铁锅炖，还有豆腐之类的，可以做点硬菜，多看多学，甚至可以掌勺</p><p>4.把球拍带回去，可以偶尔打打球</p><p>5.回去请吃饭，然后买个大榴莲，据说今年榴莲挺便宜的</p><p>来年一定要好好加油啊:p</p><h1 id="1月4日更新"><a href="#1月4日更新" class="headerlink" title="1月4日更新"></a>1月4日更新</h1><h2 id="寒假"><a href="#寒假" class="headerlink" title="寒假"></a>寒假</h2><p>1.英语不能丢，得每天看点sciencedaily</p><p>2.看高数</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;哎，时间不等人啊&lt;br&gt;大学上半赛季已经结算了&lt;/p&gt;
&lt;p&gt;社恐性格，或多或少有点改变吧，奇怪的社交经验增加了&lt;/p&gt;
&lt;p&gt;关于人脉，其实也就那样，都是互利而已，哎&lt;br&gt;但是必须得有，面上得有，也没必要细究那么多&lt;/p&gt;
&lt;p&gt;读了闲书几本，感觉还是颇有裨益的，能学到</summary>
      
    
    
    
    <category term="未来日记" scheme="http://suyanblog.cn/categories/%E6%9C%AA%E6%9D%A5%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>关于心态 评价 表现</title>
    <link href="http://suyanblog.cn/aboutmindheart/"/>
    <id>http://suyanblog.cn/aboutmindheart/</id>
    <published>2024-08-13T01:44:22.000Z</published>
    <updated>2025-03-09T11:44:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于评价"><a href="#关于评价" class="headerlink" title="关于评价"></a>关于评价</h2><p>其实很早之前，就听别人说，高考是人生中相对比较公平的平台了。</p><p>做比赛的，几个月的心血凝聚成评审的10分钟，你是牛是马全凭人家的一句话。</p><p>搞研究的不也一样，写了一万年的刊，退回改了又改</p><p>就算是送外卖也要别人帮忙点点好评嘞</p><p>似乎我们都需要别人的评价，活在别人的评价之下</p><p>哎这小伙长得真帅吧</p><p>我趣真虾头</p><p>玩原神的是这样的</p><p>派克真得K头吧</p><p>我们似乎无时不刻不在被评价，同时也在评价他人</p><p>再极端点，量化你的表现，通过量化分数给你们排个号呢</p><p>自上学开始，按成绩挨个排号，教室座位都有三六九等之分</p><p>甚至玩个游戏，系统都会按你对局表现给你评个小分</p><p>到了结婚也要看看你的收入存款，父母职业都要被量化成分进行排名评价</p><p>但是数据是冰冷的，没有一丝情感。</p><p>分数你可以作弊，可以通过吸血队友，或者是全力依父。</p><p>只通过分数来评价这是很不客观的一件事情</p><p>分数低，排名靠后，只能说明你没有重视这个事情，或者是你性格，行事方式，使得你不适合从事这种事情</p><p>毕竟你不能要求一个瘦子猛猛搬砖吧</p><p>同时数据是直观的，这是评价事物最方便，最简单，最节省精力的方式。</p><p>毕竟世界上吊人这么多，谁知道你是牛是马，大就是好</p><p>世界上没有任何人能够像你一样知道你的缺点，知道你为什么犯错，理解你的错误（如果有的话就娶了吧hhh）</p><p>哎好钩 这钩真准吧</p><p>你怎么又e上去了，派克不能e起手啊</p><p>好晕，好开</p><p>没有人会帮你手把手复盘，总结错误，帮你成长</p><p>你只能去尽可能的总结错误，听取他人的意见，改变自己，从而得到他人尽可能高的评价</p><p>如果是在一些很特殊的评价场景的话，比如考试，面试</p><p>你可能只会有一次机会，你连复盘改错的机会都没有</p><p>所以在这种时候，我们只能尽可能的未雨绸缪，做到万无一失</p><p>评价是无处不在的，我们只能去顺从，去适应这种机制</p><h2 id="关于心态"><a href="#关于心态" class="headerlink" title="关于心态"></a>关于心态</h2><p>如上已经提到了及其特殊的评价场景，这种场景往往出现在你的沉没成本较高，且评价周期较长，评价影响较大时。</p><p>比如高考，考研，考公这种大型考试当中。</p><p>由于不可避免的不可抗力事件发生(运气也是实力的一部分)</p><p>评价结果可能不会尽人意</p><p>这时候玉玉是很正常的，事情已经发生，俗话说，该认命认命，有些东西该放就放</p><p>但是你更得想好你的下一步要去做什么</p><p>是总结错误再试一次，还是直接换地方</p><p>如上已经提到，排名靠后只能说明你不擅长或者是没有用心</p><p>查缺补漏是很重要的一件事情，不管是评价前还是评价后</p><p>前可以叫做未雨绸缪，后就叫给予反馈，总结修正了</p><h2 id="关于表现"><a href="#关于表现" class="headerlink" title="关于表现"></a>关于表现</h2><p>前面的世界，以后再来探索吧XD</p><h2 id="关于误会"><a href="#关于误会" class="headerlink" title="关于误会"></a>关于误会</h2><p>在与人交互的过程中，必然存在输出与输入信息之间的误差，这种误差通常被称之为误会，比较遗憾的是我们在这个交互过程中很难避免这种误差，这种错误信息的产生不仅仅只是通过对话的形式产生，包括你的言行举止，你的神态，你的情绪表现。所有一切可能输出信息的行为均可产生误差。比如我很生气，所以我会一直喝水。但是喝水这个行为并不能有效的传达出我在生气的事实。</p><p>当然这是从输出的角度来说，如果是输入的话，就关系到个人的认知感觉能力了，即误解不仅来自信息的发送者，也与接收者的背景、知识、经验、心理状态密切相关。他会将你的动作解读为什么，如果你的情绪比较低落他会不会察觉到并且针对你的情绪做出合理的行为反应。比如我很生气，在一直喝水，但是你察觉到我举杯放杯的动作比较急躁，由此可以推断出我情绪很不好。但是更多的人是得不到这层信息的，可能只是认为我很口渴，或者是生病感冒需要喝水。</p><p>如何输出信息与输入信息的处理均可导致信息的偏差从而导致人与人之间的相互不理解。也就是信息的不对称性，导致我们不可能在同一个视角下合理的对待看待问题，这是必然的。为了消除这种误会我们应尽可能的进行沟通交流，补全双方的信息，避免这种误差出现的可能性。而在沟通交流的过程中情绪也是很重要的一环，因为情绪也可以传达信息，而且会放大信息处理的误差，所以应更好的对待处理个人情绪，避免误差的进一步放大。</p><p>不管是玩游戏还是生活，都避免不了这种信息传递的误差，对于关系较近的朋友，家人，我们更多的是给予包容，尽可能的减少摩擦，亲密关系往往需要更多的包容和耐心，而对于普通社交对象，比如游戏的路人，合理界定沟通的边界，有时反而更有利于减少不必要的消耗。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;关于评价&quot;&gt;&lt;a href=&quot;#关于评价&quot; class=&quot;headerlink&quot; title=&quot;关于评价&quot;&gt;&lt;/a&gt;关于评价&lt;/h2&gt;&lt;p&gt;其实很早之前，就听别人说，高考是人生中相对比较公平的平台了。&lt;/p&gt;
&lt;p&gt;做比赛的，几个月的心血凝聚成评审的10分钟，你是</summary>
      
    
    
    
    <category term="日常" scheme="http://suyanblog.cn/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>生活是一块很苦很苦的糖</title>
    <link href="http://suyanblog.cn/daily11/"/>
    <id>http://suyanblog.cn/daily11/</id>
    <published>2024-08-05T00:00:00.000Z</published>
    <updated>2024-08-05T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>rt</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;rt&lt;/p&gt;
</summary>
      
    
    
    
    <category term="日常" scheme="http://suyanblog.cn/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>终身学习</title>
    <link href="http://suyanblog.cn/alwayslearn/"/>
    <id>http://suyanblog.cn/alwayslearn/</id>
    <published>2024-07-26T23:37:23.000Z</published>
    <updated>2024-07-26T23:37:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>24年7月26日 于杭州写下</p><p>学习是贯彻人生始终的。<br>在读书时候，那时候总认为考上了好大学，学习的任务就结束了，一辈子就舒舒服服了。自然不明白为什么总是讲究终身学习。<br>后来才发现，高考既是开始，也是结束。<br>结束的是你的童年，是你的青春，它更像是一个包装精美的礼物，你明明都知道里面装的是什么，但还是忍不住去打开。<br>回忆也是这样。</p><p>读书不等同于学习。学会社交，学会技能，学会如何与他人和解，与自己和解。或者是学会当一个职员，当一个老板。学会爱人爱己。学会独立，学会自己对抗生活。</p><p>学习总是贯穿人生始终的，失败也是。</p><p>人生不总是顺风顺水。我们永远在路上。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;24年7月26日 于杭州写下&lt;/p&gt;
&lt;p&gt;学习是贯彻人生始终的。&lt;br&gt;在读书时候，那时候总认为考上了好大学，学习的任务就结束了，一辈子就舒舒服服了。自然不明白为什么总是讲究终身学习。&lt;br&gt;后来才发现，高考既是开始，也是结束。&lt;br&gt;结束的是你的童年，是你的青春，它更像</summary>
      
    
    
    
    <category term="关于" scheme="http://suyanblog.cn/categories/%E5%85%B3%E4%BA%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>在定时器中断与while中执行代码效果不同记录</title>
    <link href="http://suyanblog.cn/stm32_1/"/>
    <id>http://suyanblog.cn/stm32_1/</id>
    <published>2024-07-16T00:00:00.000Z</published>
    <updated>2024-07-16T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="省流："><a href="#省流：" class="headerlink" title="省流："></a>省流：</h2><pre><code>1.函数使用了多个其他.c文件中的变量，使用extern声明变量。</code></pre><p>当多个.c文件使用extern 声明变量，导致正确的参数无法被引用，导致返回值错误。<br>以后在定义变量时，尽量把extern都写在.h文件中，并把所有的.h文件集合在一个.h文件中，调用只需要include一个.h文件，避免使用多个extern 声明同一个变量</p><pre><code>2. 在参数传入时候，float int类型要保证规范，否则会导致数据溢出或者是其他很奇怪的问题3.在定时器与while中使用结构体，在main里有pid的初始化，所以定时器里只放了声明与函数，导致返回值一直不对</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">   //定时器</span><br><span class="line"></span><br><span class="line"> IncrementalPID ver;</span><br><span class="line">IncrementalPID hor;</span><br><span class="line"></span><br><span class="line"> IncrementalPID_init(&amp;ver, 0.4, 0.01, 0.0);// 设置PID参数</span><br><span class="line"> IncrementalPID_init(&amp;hor, 0.4, 0.01, 0.0);// 设置PID参数</span><br><span class="line"></span><br><span class="line">Servo_pid_move(&amp;ver, &amp;hor,  y1,  y_green,  x1,  x_green);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结构体的书写要规范，在定时器中使用时候</p><p>声明、初始化、函数使用都不能少</p><p>代码书写一定要严谨，思路清晰。</p><p>参考：<br><a href="https://blog.csdn.net/weixin_51370842/article/details/127679618">keil中的extern的使用</a><br><a href="https://blog.csdn.net/z5z5z5z56/article/details/105982306">关于extern声明后，变量值和定义值不一样的问题及解决办法</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;省流：&quot;&gt;&lt;a href=&quot;#省流：&quot; class=&quot;headerlink&quot; title=&quot;省流：&quot;&gt;&lt;/a&gt;省流：&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;1.函数使用了多个其他.c文件中的变量，使用extern声明变量。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当多个.c文件</summary>
      
    
    
    
    <category term="嵌入式" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="stm32" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/stm32/"/>
    
    
  </entry>
  
  <entry>
    <title>msp3507板子跑飞</title>
    <link href="http://suyanblog.cn/ti1/"/>
    <id>http://suyanblog.cn/ti1/</id>
    <published>2024-07-16T00:00:00.000Z</published>
    <updated>2024-07-21T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>至今没有解决，具体体现在 <strong>引用变量</strong> 进行 <strong>运算</strong> 时候就会内存跑飞，可能跟extern变量也有关系<br>等后面有时间了再解决一下</p><h2 id="7月21日更新"><a href="#7月21日更新" class="headerlink" title="7月21日更新"></a>7月21日更新</h2><p>据说是编译器的问题，尽量不要用keil，使用ccs进行工程配置使用，到目前来说没有遇到奇怪的现象</p><p>这块板子布局本身也不太合理。。但是必须要用啊- -</p><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p><a href="https://blog.csdn.net/xinyz4104/article/details/118611065">STM32 Keil静态全局变量值被修改</a><br><a href="https://blog.csdn.net/phker/article/details/134056670">单片机的变量竟然被无故修改了.</a><br><a href="https://blog.csdn.net/weixin_47221359/article/details/109390145">全局变量被未知原因改变的解决方法</a><br><a href="https://zhidao.baidu.com/question/397854115.html">为什么我的DS18B20总是乱跳呢</a><br><a href="https://cn.bing.com/search?pglt=161&q=%E5%88%9D%E5%A7%8B%E5%8C%96%E8%AE%BE%E7%BD%AE%E4%B8%BA0+%E6%95%B0%E5%AD%97%E4%BC%9A%E4%B9%B1%E8%B7%B3&cvid=bb5ef59d9c634b349ac9fbe393e2c7e0&gs_lcrp=EgZjaHJvbWUyBggAEEUYOTIGCAEQABhAMgYIAhAAGEAyBggDEAAYQDIGCAQQABhAMgYIBRAAGEAyBggGEAAYQDIGCAcQABhAMgYICBAAGEDSAQkxMDEzOWowajGoAgiwAgE&FORM=ANNTA1&adppc=EDGEESS&PC=ASTS">初始化设置为0 数字会乱跳</a><br><a href="https://shequ.stmicroelectronics.cn/thread-622719-1-1.html">又是一个奇葩问题——stm32 全局变量自己乱变</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;至今没有解决，具体体现在 &lt;strong&gt;引用变量&lt;/strong&gt; 进行 &lt;strong&gt;运算&lt;/strong&gt; 时候就会内存跑飞，可能跟extern变量也有关系&lt;br&gt;等后面有时间了再解决一下&lt;/p&gt;
&lt;h2 id=&quot;7月21日更新&quot;&gt;&lt;a href=&quot;#7月21日更新</summary>
      
    
    
    
    <category term="嵌入式" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="TI" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/TI/"/>
    
    
  </entry>
  
  <entry>
    <title>flask框架下的http图传</title>
    <link href="http://suyanblog.cn/photo_stream/"/>
    <id>http://suyanblog.cn/photo_stream/</id>
    <published>2024-07-10T00:00:00.000Z</published>
    <updated>2024-07-10T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Flask介绍："><a href="#Flask介绍：" class="headerlink" title="Flask介绍："></a>Flask介绍：</h2><p>Flask是一个使用python编写的轻量化web应用框架，它的作用主要用于开发Web应用程序。Web框架（Flask）致力于如何生成HTML代码，而Web服务器（nginx）用于处理和响应HTTP请求。<br>Socket则提供了一种网络通信的底层接口，允许开发人员直接访问网络协议栈，它提供了对网络套接字的编程接口，允许应用程序直接发送和接收数据包。</p><h2 id="HTTP图传"><a href="#HTTP图传" class="headerlink" title="HTTP图传:"></a>HTTP图传:</h2><p>关于实时视频传输，业界已经有非常多成熟方案，分别应用在不同需求场景。<br>例如RTMP 、RTSP、hls 、FFMPEG 、nginx-rtmp服务器<br>同时还会涉及到时音视频的底层传输协议问题（TCP，UDP，QUIC）<br>基本上原理就是有一个中转服务器（比如Nginx），FFMPEGD推流，html拉流。那Django干啥？控制页面拉流。或者说python干啥？拉流。还有一些是用opencv做推流的，</p><p>通过 stream 形式，将图片通过 http 协议输出到客户端。只要客户端支持 multipart&#x2F;x-mixed-replace 头，就可以从响应中读取视频帧，chrome、Firefox 在这一点上有比较好的支持，只要使用 <img /> 标签就可以实现视频流效果：</p><p>下面是源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import os</span><br><span class="line">import re</span><br><span class="line">import threading as th</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">from iot import iRGB,cam</span><br><span class="line">from maix import image,app</span><br><span class="line"></span><br><span class="line">from flask import Flask, Response, redirect, url_for</span><br><span class="line">from werkzeug.serving import make_server</span><br><span class="line"></span><br><span class="line">flask_app = Flask(__name__)  # Flask app</span><br><span class="line"></span><br><span class="line">pause_event = th.Event()</span><br><span class="line">show_fps = False</span><br><span class="line">quality = 70</span><br><span class="line"></span><br><span class="line">class Server(object):</span><br><span class="line">    </span><br><span class="line">    def __init__(self) -&gt; None:</span><br><span class="line">        self.image_event = th.Event()</span><br><span class="line">        self.running = False</span><br><span class="line">        self.fpc = FPSCounter()</span><br><span class="line">        flask_app.route(&quot;/&quot;)(self.http_index)</span><br><span class="line">        flask_app.route(&quot;/stream&quot;)(self.http_stream)</span><br><span class="line">        flask_app.route(&quot;/snapshot&quot;)(self.http_snapshot)</span><br><span class="line"></span><br><span class="line">    def http_index(self):</span><br><span class="line">        return redirect(url_for(&quot;http_stream&quot;))</span><br><span class="line"></span><br><span class="line">    def stream_worker(self):</span><br><span class="line">        while self.running:</span><br><span class="line">            while pause_event.is_set():</span><br><span class="line">                time.sleep(1)</span><br><span class="line">            self.img = cam.read()</span><br><span class="line">            if show_fps:</span><br><span class="line">                self.img.draw_string(</span><br><span class="line">                    10, 10, f&quot;&#123;self.fpc.get():.3f&#125;&quot;, color=iRGB(255, 0, 0), scale=2</span><br><span class="line">                )</span><br><span class="line">            self.jpg = self.img.to_jpeg(quality)</span><br><span class="line">            if self.jpg is None:</span><br><span class="line">                print(&quot;Encoding error!&quot;)</span><br><span class="line">                app.set_exit_flag(True)</span><br><span class="line">            self.image_event.set()</span><br><span class="line"></span><br><span class="line">    def get_stream(self):</span><br><span class="line">        while self.running:</span><br><span class="line">            self.image_event.wait()</span><br><span class="line">            self.image_event.clear()</span><br><span class="line">            if self.jpg is None:</span><br><span class="line">                continue</span><br><span class="line">            self.fpc.update()</span><br><span class="line">            yield (</span><br><span class="line">                b&quot;Content-Type: data/jpeg\r\n\r\n&quot;</span><br><span class="line">                + self.jpg.to_bytes(False)</span><br><span class="line">                + b&quot;\r\n\r\n--frame\r\n&quot;</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">    def get_snapshot(self):</span><br><span class="line">        self.image_event.wait()</span><br><span class="line">        self.image_event.clear()</span><br><span class="line">        self.png = self.img.to_format(image.Format.FMT_PNG)</span><br><span class="line">        return self.png.to_bytes()</span><br><span class="line"></span><br><span class="line">    def http_stream(self):</span><br><span class="line">        return Response(</span><br><span class="line">            self.get_stream(), mimetype=&quot;multipart/x-mixed-replace; boundary=frame&quot;</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    def http_snapshot(self):</span><br><span class="line">        return Response(self.get_snapshot(), mimetype=&quot;image/png&quot;)</span><br><span class="line"></span><br><span class="line">    def start_server(self, host, port, block=False):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        Start the server non-blocking</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        assert not self.running, &quot;Server already running&quot;</span><br><span class="line">        self.running = True</span><br><span class="line">        self.stream_thread = th.Thread(target=self.stream_worker, daemon=True)</span><br><span class="line">        self.stream_thread.start()</span><br><span class="line">        self.server = make_server(host, port, flask_app, threaded=True, processes=1)</span><br><span class="line">        self.server.log_startup()</span><br><span class="line">        if block:</span><br><span class="line">            self.server.serve_forever()</span><br><span class="line">        else:</span><br><span class="line">            self.server_thread = th.Thread(</span><br><span class="line">                target=self.server.serve_forever, daemon=True</span><br><span class="line">            )</span><br><span class="line">            self.server_thread.start()</span><br><span class="line"></span><br><span class="line">    def stop_server(self):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        Stop the server</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        assert self.running, &quot;Server not running&quot;</span><br><span class="line">        self.running = False</span><br><span class="line">        self.server.shutdown()</span><br><span class="line">        self.server_thread.join()</span><br><span class="line">        self.stream_thread.join()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_ip_list():</span><br><span class="line">    lst = []</span><br><span class="line">    try:</span><br><span class="line">        content = os.popen(&quot;ifconfig&quot;).read()</span><br><span class="line">        for line in content.splitlines():</span><br><span class="line">            if line.strip().startswith(&quot;inet&quot;):</span><br><span class="line">                res = re.search(r&quot;addr:(\d+\.\d+\.\d+\.\d+)&quot;, line)</span><br><span class="line">                if res:</span><br><span class="line">                    lst.append(res.group(1))</span><br><span class="line">    except Exception:</span><br><span class="line">        pass</span><br><span class="line">    return lst if lst else [&quot;0.0.0.0&quot;]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://segmentfault.com/a/1190000018563132">使用 multipart&#x2F;x-mixed-replace 实现 http 实时视频流</a><br><a href="https://blog.csdn.net/zhong1213/article/details/103982782">（python）【学习记录】http传输图片</a><br><a href="https://maixhub.com/app/19">简易HTTP串流服务器2.0</a></p><p><a href="https://blog.csdn.net/blgpb/article/details/86642522">低延迟视频传输 UDP JPEG图像压缩 opencv</a><br><a href="https://www.cnblogs.com/lisicn/p/14582688.html">关于摄像头推流拉流的一些内容</a><br><a href="https://sinnammanyo.cn/stack/cv/opencv/apply/opencv-nginx-rtmp-pull-stream">OpenCV Nginx 实现局域网视频推流&#x2F;拉流</a></p><p><a href="https://blog.csdn.net/qq_42688495/article/details/108279618">TCP实时图像传输</a></p><p><a href="https://sinnammanyo.cn/stack/cs/network/computer-network-architecture">计算机网络体系结构</a><br><a href="https://segmentfault.com/a/1190000044953712">HTTP 和 TCP 我知道，但是套接字是什么鬼？</a><br><a href="https://blog.csdn.net/m0_74209411/article/details/137247093">HTTP协议格式详解之报头(HTTP header)、请求正文(body)</a><br><a href="https://xie.infoq.cn/article/acb47cd99090db5779bb2012f">HTTP Multipart 概述：一步步理解复杂数据传输</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Flask介绍：&quot;&gt;&lt;a href=&quot;#Flask介绍：&quot; class=&quot;headerlink&quot; title=&quot;Flask介绍：&quot;&gt;&lt;/a&gt;Flask介绍：&lt;/h2&gt;&lt;p&gt;Flask是一个使用python编写的轻量化web应用框架，它的作用主要用于开发Web应用程</summary>
      
    
    
    
    <category term="嵌入式" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="物联网" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    <category term="图传" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%89%A9%E8%81%94%E7%BD%91/%E5%9B%BE%E4%BC%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>关于HX711返回值为8388607</title>
    <link href="http://suyanblog.cn/CHV307/"/>
    <id>http://suyanblog.cn/CHV307/</id>
    <published>2024-06-19T20:28:23.000Z</published>
    <updated>2024-06-19T20:28:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>在沁恒板上用HX711来测重时，返回值一直是8388607。</p><p>换用F407时，也是如此，上网搜索发现，可能是延时不够精确，导致返回值错误。</p><p>8388608或8388607，换算为十六进制就是80000和7FFFFF，就是表示采集值无效，可以理解为0，如果始终出现，表示传感器输出或电路出错。</p><p>换了一个延时函数，测重正常了。</p><p><img src="/pic/post/cat1.jpg" alt="cat1.png"></p><p>下面是代码</p><p>延时函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">uint32_t fac_us;</span><br><span class="line"></span><br><span class="line">void HAL_Delay_us_init(uint8_t SYSCLK)</span><br><span class="line">//里面参数为自己单片机的时钟主频，我的项目目前为168MHZ，即填写169即可</span><br><span class="line">&#123;</span><br><span class="line">     fac_us=SYSCLK; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_Delay_us(uint32_t nus)</span><br><span class="line">&#123;</span><br><span class="line">    uint32_t ticks;</span><br><span class="line">    uint32_t told,tnow,tcnt=0;</span><br><span class="line">    uint32_t reload=SysTick-&gt;LOAD;</span><br><span class="line">    ticks=nus*fac_us; </span><br><span class="line">    told=SysTick-&gt;VAL; </span><br><span class="line">    while(1)</span><br><span class="line">    &#123;</span><br><span class="line">        tnow=SysTick-&gt;VAL;</span><br><span class="line">        if(tnow!=told)</span><br><span class="line">        &#123;</span><br><span class="line">            if(tnow&lt;told)tcnt+=told-tnow;</span><br><span class="line">            else tcnt+=reload-tnow+told;</span><br><span class="line">            told=tnow;</span><br><span class="line">            if(tcnt&gt;=ticks)break; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：<br>如果使用GPIO模拟高低电平变化实现传输协议时，要保证延迟函数精确，从而使得芯片正常工作<br>后面去研究一下延迟函数</p><p>参考文章：<br><a href="https://blog.csdn.net/binbincau/article/details/99332517">STM32 hx711电子称老出现8388608或8388607的原因和调试记录</a><br><a href="https://blog.csdn.net/Star19180325/article/details/135170606">STM32F407VET6可用HAL库Delay延时函数</a><br><a href="https://blog.csdn.net/m0_46577050/article/details/137509914">关于STM32单片机延时微妙（delay_us）函数-hal库</a><br><a href="https://blog.csdn.net/qq_16519885/article/details/113605948">HAL 库 uS 延时的 3 种实现方式</a><br><a href="https://blog.csdn.net/z__TY/article/details/132865738">基于stm32f103c8t6的HX711称重传感器快速上手</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在沁恒板上用HX711来测重时，返回值一直是8388607。&lt;/p&gt;
&lt;p&gt;换用F407时，也是如此，上网搜索发现，可能是延时不够精确，导致返回值错误。&lt;/p&gt;
&lt;p&gt;8388608或8388607，换算为十六进制就是80000和7FFFFF，就是表示采集值无效，可以理解为</summary>
      
    
    
    
    <category term="嵌入式" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="沁恒" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E6%B2%81%E6%81%92/"/>
    
    
  </entry>
  
  <entry>
    <title>GitHub Failed to connect to github.com port 443Timed out</title>
    <link href="http://suyanblog.cn/git1/"/>
    <id>http://suyanblog.cn/git1/</id>
    <published>2024-06-16T10:02:33.000Z</published>
    <updated>2024-06-16T10:02:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用以下命令，提交代码到远程仓库时，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>遇到如下问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fatal: unable to access &#x27;https://github.com/xxx/&#x27;: Failed to connect to github.com port 443: Timed out</span><br></pre></td></tr></table></figure><h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><p>设置代理再取消代理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global https.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure><p>再次提交</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用以下命令，提交代码到远程仓库时，&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;</summary>
      
    
    
    
    <category term="解决方案" scheme="http://suyanblog.cn/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
  </entry>
  
  <entry>
    <title>关于考试</title>
    <link href="http://suyanblog.cn/six_test/"/>
    <id>http://suyanblog.cn/six_test/</id>
    <published>2024-06-15T18:08:21.000Z</published>
    <updated>2024-06-15T18:08:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>这次六级又g了</p><h2 id="专注与环境："><a href="#专注与环境：" class="headerlink" title="专注与环境："></a>专注与环境：</h2><p>最近才发现自己耐性很差，不能静下心专注去做一件事情，比如去做一套完整的题，或者是用大段时间去做一些事情。<br>很容易做一会，心思就飘到其他地方，去打断一下原来的活动。<br>这跟环境也有关系。<br>在宿舍要素太多，总是会想一些其他东西从而打断状态<br>因为复习他毕竟是很枯燥的一件事情，所以自然而然的会去分神，看到桌面上的一件东西就会想它的故事，看到手机就想看看有没有消息，微信弹个消息，游戏就约上了<br>抵制不了这个诱惑就要去隔绝诱惑，那我不看了还不行吗<br>外部的杂乱信息也是影响专注的要素之一，所以碎片时间，宁愿发呆，也不要去刷一些视频或者是论坛之类的东西，会分神<br>所以后面复习尽可能的换一个专注且舒适的环境，减少环境的干扰<br>包括考研复习，也是需要这个环境的</p><h2 id="状态与时间："><a href="#状态与时间：" class="headerlink" title="状态与时间："></a>状态与时间：</h2><p>考试时候也不在状态，包括听力跟作文，总是有一种无所适从的感觉。<br>果然距离高考越远，考试的状态就会越差<br>是因为做题太少了，没有做题找状态。</p><p>从写作文开始就找不到状态，进而影响后面的听力，阅读因为做过两套题，再加上基础还是不错的，所以没什么问题<br>其实我听力阅读底子都是不错的，模拟练习少了，尤其是作文，跟翻译，近两年基本没有怎么动过笔，导致下笔时候脑袋也都是空空的<br>阅读因为有每天背单词的习惯，日常也会接触到一些英文段落，所以阅读没什么问题。</p><p>所以实际花在准备考试的的时间还是太短了，吃完饭了玩会游戏。。学了一小时太累了玩会游戏。。学会一个知识点了玩会游戏。。到晚上了没状态又约游戏了玩会游戏。。<br>自己不是那种突击选手，把事情压到后面一块干真不太行，只能是细水长流了<br>后面一定要每天读写看，保持英语的感觉，再看一下考研题型吧，跟六级一块准备</p><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>要做好时间规划，提前留一段时间去干事。也不要拖延。什么时间就去做什么，比如这一周我要考试复习，白天就专心考试复习</p><p>环境也要做到专注，避免在宿舍读书，去教室，实验室，或者是图书馆，避免分心。同时不要看微信之类的，因为真的会打断</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这次六级又g了&lt;/p&gt;
&lt;h2 id=&quot;专注与环境：&quot;&gt;&lt;a href=&quot;#专注与环境：&quot; class=&quot;headerlink&quot; title=&quot;专注与环境：&quot;&gt;&lt;/a&gt;专注与环境：&lt;/h2&gt;&lt;p&gt;最近才发现自己耐性很差，不能静下心专注去做一件事情，比如去做一套完整的题，或者</summary>
      
    
    
    
    <category term="关于" scheme="http://suyanblog.cn/categories/%E5%85%B3%E4%BA%8E/"/>
    
    
  </entry>
  
</feed>
