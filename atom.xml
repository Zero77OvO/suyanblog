<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>素颜的博客~</title>
  
  
  <link href="http://suyanblog.cn/atom.xml" rel="self"/>
  
  <link href="http://suyanblog.cn/"/>
  <updated>2024-09-09T00:00:00.000Z</updated>
  <id>http://suyanblog.cn/</id>
  
  <author>
    <name>素颜</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Windows 11修改C盘用户文件夹名称</title>
    <link href="http://suyanblog.cn/windows1/"/>
    <id>http://suyanblog.cn/windows1/</id>
    <published>2024-09-09T00:00:00.000Z</published>
    <updated>2024-09-09T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://izumi.pub/Windows/change-windows-username/">https://izumi.pub/Windows/change-windows-username/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://izumi.pub/Windows/change-windows-username/&quot;&gt;https://izumi.pub/Windows/change-windows-username/&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="关于" scheme="http://suyanblog.cn/categories/%E5%85%B3%E4%BA%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>三个大坑</title>
    <link href="http://suyanblog.cn/plan2/"/>
    <id>http://suyanblog.cn/plan2/</id>
    <published>2024-08-13T02:52:22.000Z</published>
    <updated>2024-08-13T02:52:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>哎，时间不等人啊<br>大学上半赛季已经结算了</p><p>社恐性格，或多或少有点改变吧，奇怪的社交经验增加了</p><p>关于人脉，其实也就那样，都是互利而已，哎<br>但是必须得有，面上得有，也没必要细究那么多</p><p>读了闲书几本，感觉还是颇有裨益的，能学到很多日常接触不到的知识，如果现实环境已经无法提供新的经验来源时<br>读书是个很好的选择</p><p>比赛 省一 省二，其实奖项倒是其次了，这个过程能学很多东西的，在实验室里，学技术，交朋友，还有工作上的关系处理之类的，感觉确实经历不少东西</p><p>技术栈的话，倒没必要搞太满，兴趣使然罢了，要啥学啥才是常态</p><p>下半赛季喽，马上毕业力</p><h1 id="8月13日更新"><a href="#8月13日更新" class="headerlink" title="8月13日更新"></a>8月13日更新</h1><p>假期的话</p><p>学做几个菜试试<br>（比如可乐鸡腿&#x2F;鸡翅</p><p>单词继续背吧，听力，还有作文也只能看油管了</p><p>书的话，可能也要读一点</p><p>更新一下博客，加点名言警句，顺便把文章归档一下</p><p>开学的话</p><p>据说还有考试</p><p>控制方向的书得猛看了，daily的看，</p><p>如果是技术栈方向的话 c++，试试写驱动？给maixcam做做开发</p><p>c# qt?</p><p>看看rtos，香橙派边缘ai开发，linux嵌入式</p><p>把cam边缘ai图像识别弄明白，做点开源项目</p><p>如果是比赛的话，cv也要学，python还是不太熟，舵机代码之类的还要看</p><p>小猫还有必要优化吗？需要的话再做</p><p>usart DMA? 还有什么fifo？<br>can总线 lin总线<br>Delay函数</p><p>可以玩3d打印机</p><p>试试写一个简历</p><h1 id="8月26日更新"><a href="#8月26日更新" class="headerlink" title="8月26日更新"></a>8月26日更新</h1><h2 id="所想"><a href="#所想" class="headerlink" title="所想"></a>所想</h2><p>1.关于运气 实力<br>2.如何理财<br>3.亚当斯密 商鞅，卢梭？</p><p>4.输入少了，看看油管，多水群</p><h2 id="闲暇"><a href="#闲暇" class="headerlink" title="闲暇"></a>闲暇</h2><p>1.虐完黑吗喽<br>2.打印机也可以玩，但是现在属实没想法</p><h2 id="技术"><a href="#技术" class="headerlink" title="技术"></a>技术</h2><p>1.cv作为工具，小看一手<br>2.c++ 方向的岗位？ qt做上位机的应该不少，c#呢，或者是lua<br>3.maixcam 开发，应该也能学很多东西，好像是</p><h3 id="嵌入式"><a href="#嵌入式" class="headerlink" title="嵌入式"></a>嵌入式</h3><p>1.rtos？<br>2.linux开发<br>3.驱动开发<br>4.fpga<br>5.或者是其他的交叉领域，网安？<br>6.arm芯片</p><h2 id="学校"><a href="#学校" class="headerlink" title="学校"></a>学校</h2><p>1.四六级，英语还得看，写作部分，听力部分<br>2.控制方面的书籍</p><h2 id="小项目"><a href="#小项目" class="headerlink" title="小项目"></a>小项目</h2><ol><li>fps ai锁完善一手<br> 虐一手c++，甚至还想开发内存挂<br> yolo也是大有可为，复盘一下这个项目吧</li></ol><p>2.复刻一个maa自动化程序<br>3.自动化考试软件</p><h2 id="杂七杂八"><a href="#杂七杂八" class="headerlink" title="杂七杂八"></a>杂七杂八</h2><p>1.卖课去</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;哎，时间不等人啊&lt;br&gt;大学上半赛季已经结算了&lt;/p&gt;
&lt;p&gt;社恐性格，或多或少有点改变吧，奇怪的社交经验增加了&lt;/p&gt;
&lt;p&gt;关于人脉，其实也就那样，都是互利而已，哎&lt;br&gt;但是必须得有，面上得有，也没必要细究那么多&lt;/p&gt;
&lt;p&gt;读了闲书几本，感觉还是颇有裨益的，能学到</summary>
      
    
    
    
    <category term="未来日记" scheme="http://suyanblog.cn/categories/%E6%9C%AA%E6%9D%A5%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>关于心态 评价 表现</title>
    <link href="http://suyanblog.cn/aboutmindheart/"/>
    <id>http://suyanblog.cn/aboutmindheart/</id>
    <published>2024-08-13T01:44:22.000Z</published>
    <updated>2024-08-13T01:44:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于评价"><a href="#关于评价" class="headerlink" title="关于评价"></a>关于评价</h2><p>其实很早之前，就听别人说，高考是人生中相对比较公平的平台了。</p><p>做比赛的，几个月的心血凝聚成评审的10分钟，你是牛是马全凭人家的一句话。</p><p>搞研究的不也一样，写了一万年的刊，退回改了又改</p><p>就算是送外卖也要别人帮忙点点好评嘞</p><p>似乎我们都需要别人的评价，活在别人的评价之下</p><p>哎这小伙长得真帅吧</p><p>我趣真虾头</p><p>玩原神的是这样的</p><p>派克真得K头吧</p><p>我们似乎无时不刻不在被评价，同时也在评价他人</p><p>再极端点，量化你的表现，通过量化分数给你们排个号呢</p><p>自上学开始，按成绩挨个排号，教室座位都有三六九等之分</p><p>甚至玩个游戏，系统都会按你对局表现给你评个小分</p><p>到了结婚也要看看你的收入存款，父母职业都要被量化成分进行排名评价</p><p>但是数据是冰冷的，没有一丝情感。</p><p>分数你可以作弊，可以通过吸血队友，或者是全力依父。</p><p>只通过分数来评价这是很不客观的一件事情</p><p>分数低，排名靠后，只能说明你没有重视这个事情，或者是你性格，行事方式，使得你不适合从事这种事情</p><p>毕竟你不能要求一个瘦子猛猛搬砖吧</p><p>同时数据是直观的，这是评价事物最方便，最简单，最节省精力的方式。</p><p>毕竟世界上吊人这么多，谁知道你是牛是马，大就是好</p><p>世界上没有任何人能够像你一样知道你的缺点，知道你为什么犯错，理解你的错误（如果有的话就娶了吧hhh）</p><p>哎好钩 这钩真准吧</p><p>你怎么又e上去了，派克不能e起手啊</p><p>好晕，好开</p><p>没有人会帮你手把手复盘，总结错误，帮你成长</p><p>你只能去尽可能的总结错误，听取他人的意见，改变自己，从而得到他人尽可能高的评价</p><p>如果是在一些很特殊的评价场景的话，比如考试，面试</p><p>你可能只会有一次机会，你连复盘改错的机会都没有</p><p>所以在这种时候，我们只能尽可能的未雨绸缪，做到万无一失</p><p>评价是无处不在的，我们只能去顺从，去适应这种机制</p><h2 id="关于心态"><a href="#关于心态" class="headerlink" title="关于心态"></a>关于心态</h2><p>如上已经提到了及其特殊的评价场景，这种场景往往出现在你的沉没成本较高，且评价周期较长，评价影响较大时。</p><p>比如高考，考研，考公这种大型考试当中。</p><p>由于不可避免的不可抗力事件发生(运气也是实力的一部分)</p><p>评价结果可能不会尽人意</p><p>这时候玉玉是很正常的，事情已经发生，俗话说，该认命认命，有些东西该放就放</p><p>但是你更得想好你的下一步要去做什么</p><p>是总结错误再试一次，还是直接换地方</p><p>如上已经提到，排名靠后只能说明你不擅长或者是没有用心</p><p>查缺补漏是很重要的一件事情，不管是评价前还是评价后</p><p>前可以叫做未雨绸缪，后就叫给予反馈，总结修正了</p><h2 id="关于表现"><a href="#关于表现" class="headerlink" title="关于表现"></a>关于表现</h2><p>前面的世界，以后再来探索吧XD</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;关于评价&quot;&gt;&lt;a href=&quot;#关于评价&quot; class=&quot;headerlink&quot; title=&quot;关于评价&quot;&gt;&lt;/a&gt;关于评价&lt;/h2&gt;&lt;p&gt;其实很早之前，就听别人说，高考是人生中相对比较公平的平台了。&lt;/p&gt;
&lt;p&gt;做比赛的，几个月的心血凝聚成评审的10分钟，你是</summary>
      
    
    
    
    <category term="关于" scheme="http://suyanblog.cn/categories/%E5%85%B3%E4%BA%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>生活是一块很苦很苦的糖</title>
    <link href="http://suyanblog.cn/daily11/"/>
    <id>http://suyanblog.cn/daily11/</id>
    <published>2024-08-05T00:00:00.000Z</published>
    <updated>2024-08-05T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>rt</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;rt&lt;/p&gt;
</summary>
      
    
    
    
    <category term="日常" scheme="http://suyanblog.cn/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>终身学习</title>
    <link href="http://suyanblog.cn/alwayslearn/"/>
    <id>http://suyanblog.cn/alwayslearn/</id>
    <published>2024-07-26T23:37:23.000Z</published>
    <updated>2024-07-26T23:37:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>24年7月26日 于杭州写下</p><p>学习是贯彻人生始终的。<br>在读书时候，那时候总认为考上了好大学，学习的任务就结束了，一辈子就舒舒服服了。自然不明白为什么总是讲究终身学习。<br>后来才发现，高考既是开始，也是结束。<br>结束的是你的童年，是你的青春，它更像是一个包装精美的礼物，你明明都知道里面装的是什么，但还是忍不住去打开。<br>回忆也是这样。</p><p>读书不等同于学习。学会社交，学会技能，学会如何与他人和解，与自己和解。或者是学会当一个职员，当一个老板。学会爱人爱己。学会独立，学会自己对抗生活。</p><p>学习总是贯穿人生始终的，失败也是。</p><p>人生不总是顺风顺水。我们永远在路上。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;24年7月26日 于杭州写下&lt;/p&gt;
&lt;p&gt;学习是贯彻人生始终的。&lt;br&gt;在读书时候，那时候总认为考上了好大学，学习的任务就结束了，一辈子就舒舒服服了。自然不明白为什么总是讲究终身学习。&lt;br&gt;后来才发现，高考既是开始，也是结束。&lt;br&gt;结束的是你的童年，是你的青春，它更像</summary>
      
    
    
    
    <category term="关于" scheme="http://suyanblog.cn/categories/%E5%85%B3%E4%BA%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>在定时器中断与while中执行代码效果不同记录</title>
    <link href="http://suyanblog.cn/stm32_1/"/>
    <id>http://suyanblog.cn/stm32_1/</id>
    <published>2024-07-16T00:00:00.000Z</published>
    <updated>2024-07-16T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="省流："><a href="#省流：" class="headerlink" title="省流："></a>省流：</h2><pre><code>1.函数使用了多个其他.c文件中的变量，使用extern声明变量。</code></pre><p>当多个.c文件使用extern 声明变量，导致正确的参数无法被引用，导致返回值错误。<br>以后在定义变量时，尽量把extern都写在.h文件中，并把所有的.h文件集合在一个.h文件中，调用只需要include一个.h文件，避免使用多个extern 声明同一个变量</p><pre><code>2. 在参数传入时候，float int类型要保证规范，否则会导致数据溢出或者是其他很奇怪的问题3.在定时器与while中使用结构体，在main里有pid的初始化，所以定时器里只放了声明与函数，导致返回值一直不对</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">   //定时器</span><br><span class="line"></span><br><span class="line"> IncrementalPID ver;</span><br><span class="line">IncrementalPID hor;</span><br><span class="line"></span><br><span class="line"> IncrementalPID_init(&amp;ver, 0.4, 0.01, 0.0);// 设置PID参数</span><br><span class="line"> IncrementalPID_init(&amp;hor, 0.4, 0.01, 0.0);// 设置PID参数</span><br><span class="line"></span><br><span class="line">Servo_pid_move(&amp;ver, &amp;hor,  y1,  y_green,  x1,  x_green);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结构体的书写要规范，在定时器中使用时候</p><p>声明、初始化、函数使用都不能少</p><p>代码书写一定要严谨，思路清晰。</p><p>参考：<br><a href="https://blog.csdn.net/weixin_51370842/article/details/127679618">keil中的extern的使用</a><br><a href="https://blog.csdn.net/z5z5z5z56/article/details/105982306">关于extern声明后，变量值和定义值不一样的问题及解决办法</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;省流：&quot;&gt;&lt;a href=&quot;#省流：&quot; class=&quot;headerlink&quot; title=&quot;省流：&quot;&gt;&lt;/a&gt;省流：&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;1.函数使用了多个其他.c文件中的变量，使用extern声明变量。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当多个.c文件</summary>
      
    
    
    
    <category term="嵌入式" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="stm32" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/stm32/"/>
    
    
  </entry>
  
  <entry>
    <title>msp3507板子跑飞</title>
    <link href="http://suyanblog.cn/ti1/"/>
    <id>http://suyanblog.cn/ti1/</id>
    <published>2024-07-16T00:00:00.000Z</published>
    <updated>2024-07-21T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>至今没有解决，具体体现在 <strong>引用变量</strong> 进行 <strong>运算</strong> 时候就会内存跑飞，可能跟extern变量也有关系<br>等后面有时间了再解决一下</p><h2 id="7月21日更新"><a href="#7月21日更新" class="headerlink" title="7月21日更新"></a>7月21日更新</h2><p>据说是编译器的问题，尽量不要用keil，使用ccs进行工程配置使用，到目前来说没有遇到奇怪的现象</p><p>这块板子布局本身也不太合理。。但是必须要用啊- -</p><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p><a href="https://blog.csdn.net/xinyz4104/article/details/118611065">STM32 Keil静态全局变量值被修改</a><br><a href="https://blog.csdn.net/phker/article/details/134056670">单片机的变量竟然被无故修改了.</a><br><a href="https://blog.csdn.net/weixin_47221359/article/details/109390145">全局变量被未知原因改变的解决方法</a><br><a href="https://zhidao.baidu.com/question/397854115.html">为什么我的DS18B20总是乱跳呢</a><br><a href="https://cn.bing.com/search?pglt=161&q=%E5%88%9D%E5%A7%8B%E5%8C%96%E8%AE%BE%E7%BD%AE%E4%B8%BA0+%E6%95%B0%E5%AD%97%E4%BC%9A%E4%B9%B1%E8%B7%B3&cvid=bb5ef59d9c634b349ac9fbe393e2c7e0&gs_lcrp=EgZjaHJvbWUyBggAEEUYOTIGCAEQABhAMgYIAhAAGEAyBggDEAAYQDIGCAQQABhAMgYIBRAAGEAyBggGEAAYQDIGCAcQABhAMgYICBAAGEDSAQkxMDEzOWowajGoAgiwAgE&FORM=ANNTA1&adppc=EDGEESS&PC=ASTS">初始化设置为0 数字会乱跳</a><br><a href="https://shequ.stmicroelectronics.cn/thread-622719-1-1.html">又是一个奇葩问题——stm32 全局变量自己乱变</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;至今没有解决，具体体现在 &lt;strong&gt;引用变量&lt;/strong&gt; 进行 &lt;strong&gt;运算&lt;/strong&gt; 时候就会内存跑飞，可能跟extern变量也有关系&lt;br&gt;等后面有时间了再解决一下&lt;/p&gt;
&lt;h2 id=&quot;7月21日更新&quot;&gt;&lt;a href=&quot;#7月21日更新</summary>
      
    
    
    
    <category term="嵌入式" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="TI" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/TI/"/>
    
    
  </entry>
  
  <entry>
    <title>flask框架下的http图传</title>
    <link href="http://suyanblog.cn/photo_stream/"/>
    <id>http://suyanblog.cn/photo_stream/</id>
    <published>2024-07-10T00:00:00.000Z</published>
    <updated>2024-07-10T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Flask介绍："><a href="#Flask介绍：" class="headerlink" title="Flask介绍："></a>Flask介绍：</h2><p>Flask是一个使用python编写的轻量化web应用框架，它的作用主要用于开发Web应用程序。Web框架（Flask）致力于如何生成HTML代码，而Web服务器（nginx）用于处理和响应HTTP请求。<br>Socket则提供了一种网络通信的底层接口，允许开发人员直接访问网络协议栈，它提供了对网络套接字的编程接口，允许应用程序直接发送和接收数据包。</p><h2 id="HTTP图传"><a href="#HTTP图传" class="headerlink" title="HTTP图传:"></a>HTTP图传:</h2><p>关于实时视频传输，业界已经有非常多成熟方案，分别应用在不同需求场景。<br>例如RTMP 、RTSP、hls 、FFMPEG 、nginx-rtmp服务器<br>同时还会涉及到时音视频的底层传输协议问题（TCP，UDP，QUIC）<br>基本上原理就是有一个中转服务器（比如Nginx），FFMPEGD推流，html拉流。那Django干啥？控制页面拉流。或者说python干啥？拉流。还有一些是用opencv做推流的，</p><p>通过 stream 形式，将图片通过 http 协议输出到客户端。只要客户端支持 multipart&#x2F;x-mixed-replace 头，就可以从响应中读取视频帧，chrome、Firefox 在这一点上有比较好的支持，只要使用 <img /> 标签就可以实现视频流效果：</p><p>下面是源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import os</span><br><span class="line">import re</span><br><span class="line">import threading as th</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">from iot import iRGB,cam</span><br><span class="line">from maix import image,app</span><br><span class="line"></span><br><span class="line">from flask import Flask, Response, redirect, url_for</span><br><span class="line">from werkzeug.serving import make_server</span><br><span class="line"></span><br><span class="line">flask_app = Flask(__name__)  # Flask app</span><br><span class="line"></span><br><span class="line">pause_event = th.Event()</span><br><span class="line">show_fps = False</span><br><span class="line">quality = 70</span><br><span class="line"></span><br><span class="line">class Server(object):</span><br><span class="line">    </span><br><span class="line">    def __init__(self) -&gt; None:</span><br><span class="line">        self.image_event = th.Event()</span><br><span class="line">        self.running = False</span><br><span class="line">        self.fpc = FPSCounter()</span><br><span class="line">        flask_app.route(&quot;/&quot;)(self.http_index)</span><br><span class="line">        flask_app.route(&quot;/stream&quot;)(self.http_stream)</span><br><span class="line">        flask_app.route(&quot;/snapshot&quot;)(self.http_snapshot)</span><br><span class="line"></span><br><span class="line">    def http_index(self):</span><br><span class="line">        return redirect(url_for(&quot;http_stream&quot;))</span><br><span class="line"></span><br><span class="line">    def stream_worker(self):</span><br><span class="line">        while self.running:</span><br><span class="line">            while pause_event.is_set():</span><br><span class="line">                time.sleep(1)</span><br><span class="line">            self.img = cam.read()</span><br><span class="line">            if show_fps:</span><br><span class="line">                self.img.draw_string(</span><br><span class="line">                    10, 10, f&quot;&#123;self.fpc.get():.3f&#125;&quot;, color=iRGB(255, 0, 0), scale=2</span><br><span class="line">                )</span><br><span class="line">            self.jpg = self.img.to_jpeg(quality)</span><br><span class="line">            if self.jpg is None:</span><br><span class="line">                print(&quot;Encoding error!&quot;)</span><br><span class="line">                app.set_exit_flag(True)</span><br><span class="line">            self.image_event.set()</span><br><span class="line"></span><br><span class="line">    def get_stream(self):</span><br><span class="line">        while self.running:</span><br><span class="line">            self.image_event.wait()</span><br><span class="line">            self.image_event.clear()</span><br><span class="line">            if self.jpg is None:</span><br><span class="line">                continue</span><br><span class="line">            self.fpc.update()</span><br><span class="line">            yield (</span><br><span class="line">                b&quot;Content-Type: data/jpeg\r\n\r\n&quot;</span><br><span class="line">                + self.jpg.to_bytes(False)</span><br><span class="line">                + b&quot;\r\n\r\n--frame\r\n&quot;</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">    def get_snapshot(self):</span><br><span class="line">        self.image_event.wait()</span><br><span class="line">        self.image_event.clear()</span><br><span class="line">        self.png = self.img.to_format(image.Format.FMT_PNG)</span><br><span class="line">        return self.png.to_bytes()</span><br><span class="line"></span><br><span class="line">    def http_stream(self):</span><br><span class="line">        return Response(</span><br><span class="line">            self.get_stream(), mimetype=&quot;multipart/x-mixed-replace; boundary=frame&quot;</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    def http_snapshot(self):</span><br><span class="line">        return Response(self.get_snapshot(), mimetype=&quot;image/png&quot;)</span><br><span class="line"></span><br><span class="line">    def start_server(self, host, port, block=False):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        Start the server non-blocking</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        assert not self.running, &quot;Server already running&quot;</span><br><span class="line">        self.running = True</span><br><span class="line">        self.stream_thread = th.Thread(target=self.stream_worker, daemon=True)</span><br><span class="line">        self.stream_thread.start()</span><br><span class="line">        self.server = make_server(host, port, flask_app, threaded=True, processes=1)</span><br><span class="line">        self.server.log_startup()</span><br><span class="line">        if block:</span><br><span class="line">            self.server.serve_forever()</span><br><span class="line">        else:</span><br><span class="line">            self.server_thread = th.Thread(</span><br><span class="line">                target=self.server.serve_forever, daemon=True</span><br><span class="line">            )</span><br><span class="line">            self.server_thread.start()</span><br><span class="line"></span><br><span class="line">    def stop_server(self):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        Stop the server</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        assert self.running, &quot;Server not running&quot;</span><br><span class="line">        self.running = False</span><br><span class="line">        self.server.shutdown()</span><br><span class="line">        self.server_thread.join()</span><br><span class="line">        self.stream_thread.join()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_ip_list():</span><br><span class="line">    lst = []</span><br><span class="line">    try:</span><br><span class="line">        content = os.popen(&quot;ifconfig&quot;).read()</span><br><span class="line">        for line in content.splitlines():</span><br><span class="line">            if line.strip().startswith(&quot;inet&quot;):</span><br><span class="line">                res = re.search(r&quot;addr:(\d+\.\d+\.\d+\.\d+)&quot;, line)</span><br><span class="line">                if res:</span><br><span class="line">                    lst.append(res.group(1))</span><br><span class="line">    except Exception:</span><br><span class="line">        pass</span><br><span class="line">    return lst if lst else [&quot;0.0.0.0&quot;]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://segmentfault.com/a/1190000018563132">使用 multipart&#x2F;x-mixed-replace 实现 http 实时视频流</a><br><a href="https://blog.csdn.net/zhong1213/article/details/103982782">（python）【学习记录】http传输图片</a><br><a href="https://maixhub.com/app/19">简易HTTP串流服务器2.0</a></p><p><a href="https://blog.csdn.net/blgpb/article/details/86642522">低延迟视频传输 UDP JPEG图像压缩 opencv</a><br><a href="https://www.cnblogs.com/lisicn/p/14582688.html">关于摄像头推流拉流的一些内容</a><br><a href="https://sinnammanyo.cn/stack/cv/opencv/apply/opencv-nginx-rtmp-pull-stream">OpenCV Nginx 实现局域网视频推流&#x2F;拉流</a></p><p><a href="https://blog.csdn.net/qq_42688495/article/details/108279618">TCP实时图像传输</a></p><p><a href="https://sinnammanyo.cn/stack/cs/network/computer-network-architecture">计算机网络体系结构</a><br><a href="https://segmentfault.com/a/1190000044953712">HTTP 和 TCP 我知道，但是套接字是什么鬼？</a><br><a href="https://blog.csdn.net/m0_74209411/article/details/137247093">HTTP协议格式详解之报头(HTTP header)、请求正文(body)</a><br><a href="https://xie.infoq.cn/article/acb47cd99090db5779bb2012f">HTTP Multipart 概述：一步步理解复杂数据传输</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Flask介绍：&quot;&gt;&lt;a href=&quot;#Flask介绍：&quot; class=&quot;headerlink&quot; title=&quot;Flask介绍：&quot;&gt;&lt;/a&gt;Flask介绍：&lt;/h2&gt;&lt;p&gt;Flask是一个使用python编写的轻量化web应用框架，它的作用主要用于开发Web应用程</summary>
      
    
    
    
    <category term="嵌入式" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="物联网" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    <category term="图传" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%89%A9%E8%81%94%E7%BD%91/%E5%9B%BE%E4%BC%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>关于HX711返回值为8388607</title>
    <link href="http://suyanblog.cn/CHV307/"/>
    <id>http://suyanblog.cn/CHV307/</id>
    <published>2024-06-19T20:28:23.000Z</published>
    <updated>2024-06-19T20:28:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>在沁恒板上用HX711来测重时，返回值一直是8388607。</p><p>换用F407时，也是如此，上网搜索发现，可能是延时不够精确，导致返回值错误。</p><p>8388608或8388607，换算为十六进制就是80000和7FFFFF，就是表示采集值无效，可以理解为0，如果始终出现，表示传感器输出或电路出错。</p><p>换了一个延时函数，测重正常了。</p><p><img src="https://www.freeimg.cn/i/2024/06/19/6672d08810ee4.jpg" alt="cat1.jpg"></p><p>下面是代码<br>延时函数<br>‘’’<br>uint32_t fac_us;</p><p>void HAL_Delay_us_init(uint8_t SYSCLK)&#x2F;&#x2F;里面参数为自己单片机的时钟主频，我的项目目前为168MHZ，即填写169即可<br>{<br>     fac_us&#x3D;SYSCLK;<br>}</p><p>void HAL_Delay_us(uint32_t nus)<br>{<br>    uint32_t ticks;<br>    uint32_t told,tnow,tcnt&#x3D;0;<br>    uint32_t reload&#x3D;SysTick-&gt;LOAD;<br>    ticks&#x3D;nus*fac_us;<br>    told&#x3D;SysTick-&gt;VAL;<br>    while(1)<br>    {<br>        tnow&#x3D;SysTick-&gt;VAL;<br>        if(tnow!&#x3D;told)<br>        {<br>            if(tnow&lt;told)tcnt+&#x3D;told-tnow;<br>            else tcnt+&#x3D;reload-tnow+told;<br>            told&#x3D;tnow;<br>            if(tcnt&gt;&#x3D;ticks)break;<br>        }<br>    };<br>}<br>‘’’</p><p>总结：<br>如果使用GPIO模拟高低电平变化实现传输协议时，要保证延迟函数精确，从而使得芯片正常工作<br>后面去研究一下延迟函数</p><p>参考文章：<br><a href="https://blog.csdn.net/binbincau/article/details/99332517">STM32 hx711电子称老出现8388608或8388607的原因和调试记录</a><br><a href="https://blog.csdn.net/Star19180325/article/details/135170606">STM32F407VET6可用HAL库Delay延时函数</a><br><a href="https://blog.csdn.net/m0_46577050/article/details/137509914">关于STM32单片机延时微妙（delay_us）函数-hal库</a><br><a href="https://blog.csdn.net/qq_16519885/article/details/113605948">HAL 库 uS 延时的 3 种实现方式</a><br><a href="https://blog.csdn.net/z__TY/article/details/132865738">基于stm32f103c8t6的HX711称重传感器快速上手</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在沁恒板上用HX711来测重时，返回值一直是8388607。&lt;/p&gt;
&lt;p&gt;换用F407时，也是如此，上网搜索发现，可能是延时不够精确，导致返回值错误。&lt;/p&gt;
&lt;p&gt;8388608或8388607，换算为十六进制就是80000和7FFFFF，就是表示采集值无效，可以理解为</summary>
      
    
    
    
    <category term="嵌入式" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="沁恒" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E6%B2%81%E6%81%92/"/>
    
    
  </entry>
  
  <entry>
    <title>GitHub Failed to connect to github.com port 443Timed out</title>
    <link href="http://suyanblog.cn/git1/"/>
    <id>http://suyanblog.cn/git1/</id>
    <published>2024-06-16T10:02:33.000Z</published>
    <updated>2024-06-16T10:02:33.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用以下命令，提交代码到远程仓库时，遇到如下问题：解决方法："><a href="#使用以下命令，提交代码到远程仓库时，遇到如下问题：解决方法：" class="headerlink" title="使用以下命令，提交代码到远程仓库时，遇到如下问题：解决方法："></a>使用以下命令，提交代码到远程仓库时，<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><br>遇到如下问题：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fatal: unable to access &#x27;https://github.com/xxx/&#x27;: Failed to connect to github.com port 443: Timed out</span><br></pre></td></tr></table></figure><br>解决方法：</h2><p>设置代理再取消代理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global https.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure><p>再次提交</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;使用以下命令，提交代码到远程仓库时，遇到如下问题：解决方法：&quot;&gt;&lt;a href=&quot;#使用以下命令，提交代码到远程仓库时，遇到如下问题：解决方法：&quot; class=&quot;headerlink&quot; title=&quot;使用以下命令，提交代码到远程仓库时，遇到如下问题：解决方法：&quot;&gt;</summary>
      
    
    
    
    <category term="解决方案" scheme="http://suyanblog.cn/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
  </entry>
  
  <entry>
    <title>关于考试</title>
    <link href="http://suyanblog.cn/six_test/"/>
    <id>http://suyanblog.cn/six_test/</id>
    <published>2024-06-15T18:08:21.000Z</published>
    <updated>2024-06-15T18:08:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>这次六级又g了</p><h2 id="专注与环境："><a href="#专注与环境：" class="headerlink" title="专注与环境："></a>专注与环境：</h2><p>最近才发现自己耐性很差，不能静下心专注去做一件事情，比如去做一套完整的题，或者是用大段时间去做一些事情。<br>很容易做一会，心思就飘到其他地方，去打断一下原来的活动。<br>这跟环境也有关系。<br>在宿舍要素太多，总是会想一些其他东西从而打断状态<br>因为复习他毕竟是很枯燥的一件事情，所以自然而然的会去分神，看到桌面上的一件东西就会想它的故事，看到手机就想看看有没有消息，微信弹个消息，游戏就约上了<br>抵制不了这个诱惑就要去隔绝诱惑，那我不看了还不行吗<br>外部的杂乱信息也是影响专注的要素之一，所以碎片时间，宁愿发呆，也不要去刷一些视频或者是论坛之类的东西，会分神<br>所以后面复习尽可能的换一个专注且舒适的环境，减少环境的干扰<br>包括考研复习，也是需要这个环境的</p><h2 id="状态与时间："><a href="#状态与时间：" class="headerlink" title="状态与时间："></a>状态与时间：</h2><p>考试时候也不在状态，包括听力跟作文，总是有一种无所适从的感觉。<br>果然距离高考越远，考试的状态就会越差<br>是因为做题太少了，没有做题找状态。</p><p>从写作文开始就找不到状态，进而影响后面的听力，阅读因为做过两套题，再加上基础还是不错的，所以没什么问题<br>其实我听力阅读底子都是不错的，模拟练习少了，尤其是作文，跟翻译，近两年基本没有怎么动过笔，导致下笔时候脑袋也都是空空的<br>阅读因为有每天背单词的习惯，日常也会接触到一些英文段落，所以阅读没什么问题。</p><p>所以实际花在准备考试的的时间还是太短了，吃完饭了玩会游戏。。学了一小时太累了玩会游戏。。学会一个知识点了玩会游戏。。到晚上了没状态又约游戏了玩会游戏。。<br>自己不是那种突击选手，把事情压到后面一块干真不太行，只能是细水长流了<br>后面一定要每天读写看，保持英语的感觉，再看一下考研题型吧，跟六级一块准备</p><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>要做好时间规划，提前留一段时间去干事。也不要拖延。什么时间就去做什么，比如这一周我要考试复习，白天就专心考试复习</p><p>环境也要做到专注，避免在宿舍读书，去教室，实验室，或者是图书馆，避免分心。同时不要看微信之类的，因为真的会打断</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这次六级又g了&lt;/p&gt;
&lt;h2 id=&quot;专注与环境：&quot;&gt;&lt;a href=&quot;#专注与环境：&quot; class=&quot;headerlink&quot; title=&quot;专注与环境：&quot;&gt;&lt;/a&gt;专注与环境：&lt;/h2&gt;&lt;p&gt;最近才发现自己耐性很差，不能静下心专注去做一件事情，比如去做一套完整的题，或者</summary>
      
    
    
    
    <category term="关于" scheme="http://suyanblog.cn/categories/%E5%85%B3%E4%BA%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>关于技能</title>
    <link href="http://suyanblog.cn/skill/"/>
    <id>http://suyanblog.cn/skill/</id>
    <published>2024-06-11T14:22:42.000Z</published>
    <updated>2024-06-12T22:42:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>其实无论是做饭，读书，考试，玩游戏，c语言，画画，唱歌，跳舞这些都可以统称为 技能</p><p>而技能的等级，其实就是你的掌握程度</p><p>想在社会上谋生的话，你必须要熟练掌握某种，独特的技能，从而获得报酬。<br>你需要找到自己感兴趣，擅长的技能，精进他。<br>当然人的精力是有限的，所以我们只能精通一个领域。</p><p>提到了精进，那就肯定要有一个学习的过程。有的人掌握了更优质的资源，信息，或者找到了合适的方法，从而可以更节省精力，达到精进的结果。</p><p>在精进过程中是必然要犯错的，只是信息少了，犯错的几率会更大，花的时间也会相应多。</p><p>很可惜，不是所有人都有相同的资源与环境，所以我们只能尽可能的去获取信息，在精进的过程中及时反馈，从而达到学习的目的。</p><p>其实世界上本来就没有天赋这种东西，所有的技能都是后天习得的，只不过由于成长环境，技能学习的资源的差异，使得你们对某种技能掌握的程度不一样。某些行业的天才，只是因为他们在这行接触资源多，再加上相当一段时间的内化学习，相较于其他人来说，懂得多而已。</p><p>世界上所有的事物一定是有公式解的，只是因为环境的复杂性，使得构建公式的成本较高或者是没有意义，即投入大于回报。但是你仍旧可以通过构造一定的伪公式，加上灵活的处理，提高你达成目的的效率。</p><p>时代是进步的，学习某种技能也一定要结合时代的需要，过气的经验也是无用的。苦练经验是必须的，但是也需要找到合适的方法，及时反馈学习。</p><p>所以趁着年轻多读点书？当然读书也是需要针对性的读，针对个人的薄弱点，哪里不懂学哪里。</p><p>&#x2F;&#x2F;当然，当你掌握了其他人没有的资源时，你也可以利用这种资源进行多方面的变现。<br>比如技能的传授，即卖课，你会别人不会的技能，而且别人想学，这时候就能收钱卖资源。<br>或者是某种信息，你有别人不知道的东西。<br>具体流程还得看你掌握了什么资源。</p><p>培养技能是人生中一个非常重要的方面，它不仅影响个人的职业发展，还对个人的整体幸福感和自我实现有重大作用。以下是我对技能培养的一些看法：</p><h3 id="1-持续学习和自我提升"><a href="#1-持续学习和自我提升" class="headerlink" title="1. 持续学习和自我提升"></a>1. <strong>持续学习和自我提升</strong></h3><p>技能的培养是一个持续的过程。无论是在学术领域、职业生涯还是个人生活中，持续学习和自我提升都是保持竞争力和适应变化的重要途径。</p><ul><li><strong>保持好奇心</strong>：不断探索新知识和新技能，保持对世界的好奇心。</li><li><strong>终身学习</strong>：利用各种学习资源，如书籍、在线课程、工作坊等，保持学习的习惯。</li></ul><h3 id="2-设定明确的目标"><a href="#2-设定明确的目标" class="headerlink" title="2. 设定明确的目标"></a>2. <strong>设定明确的目标</strong></h3><p>设定明确的技能培养目标可以帮助你集中精力和资源，更有效地学习和掌握新技能。</p><ul><li><strong>短期目标</strong>：设定可实现的短期目标，逐步积累成就感。</li><li><strong>长期目标</strong>：设定宏大的长期目标，作为持续努力的动力。</li></ul><h3 id="3-实践和应用"><a href="#3-实践和应用" class="headerlink" title="3. 实践和应用"></a>3. <strong>实践和应用</strong></h3><p>理论学习固然重要，但真正掌握技能离不开实践和应用。</p><ul><li><strong>动手实践</strong>：在实际项目中应用所学知识，通过动手实践加深理解。</li><li><strong>解决实际问题</strong>：通过解决实际问题，提升技能的实用性和灵活性。</li></ul><h3 id="4-多样化技能组合"><a href="#4-多样化技能组合" class="headerlink" title="4. 多样化技能组合"></a>4. <strong>多样化技能组合</strong></h3><p>培养多样化的技能组合可以提升个人竞争力，并在不同领域中找到更多机会。</p><ul><li><strong>跨领域学习</strong>：学习不同领域的知识，培养跨学科的思维方式。</li><li><strong>软技能与硬技能结合</strong>：同时注重技术技能（硬技能）和人际沟通、时间管理等软技能的培养。</li></ul><h3 id="5-接受反馈和自我反思"><a href="#5-接受反馈和自我反思" class="headerlink" title="5. 接受反馈和自我反思"></a>5. <strong>接受反馈和自我反思</strong></h3><p>接受反馈和进行自我反思是技能提升的重要途径。</p><ul><li><strong>接受反馈</strong>：积极寻求他人的反馈，改进自己的不足。</li><li><strong>自我反思</strong>：定期进行自我反思，总结经验教训，调整学习策略。</li></ul><h3 id="6-适应变化和挑战"><a href="#6-适应变化和挑战" class="headerlink" title="6. 适应变化和挑战"></a>6. <strong>适应变化和挑战</strong></h3><p>世界在不断变化，适应变化和迎接挑战是培养技能的重要方面。</p><ul><li><strong>灵活应变</strong>：学会适应环境的变化，灵活调整自己的学习和工作方式。</li><li><strong>迎接挑战</strong>：勇于接受新的挑战，通过挑战提升自己的能力和水平。</li></ul><h3 id="7-建立良好的学习环境"><a href="#7-建立良好的学习环境" class="headerlink" title="7. 建立良好的学习环境"></a>7. <strong>建立良好的学习环境</strong></h3><p>一个良好的学习环境可以显著提升技能培养的效果。</p><ul><li><strong>社交学习</strong>：加入学习小组或专业社群，与他人共同学习和交流。</li><li><strong>寻找导师</strong>：找到经验丰富的导师，获得指导和支持。</li></ul><h3 id="8-保持健康和积极心态"><a href="#8-保持健康和积极心态" class="headerlink" title="8. 保持健康和积极心态"></a>8. <strong>保持健康和积极心态</strong></h3><p>身心健康和积极心态是持续学习和技能培养的基础。</p><ul><li><strong>身体健康</strong>：保持良好的身体健康，充足的睡眠和适当的锻炼。</li><li><strong>心理健康</strong>：保持积极的心态，管理好压力和情绪。</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>技能的培养是一个长期的、持续的过程，需要明确的目标、实践与应用、多样化的技能组合、反馈与反思、适应变化、良好的学习环境和健康的生活方式。通过不断地学习和自我提升，你不仅能在职业生涯中取得成功，还能在个人生活中获得更大的满足和成就感。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;其实无论是做饭，读书，考试，玩游戏，c语言，画画，唱歌，跳舞这些都可以统称为 技能&lt;/p&gt;
&lt;p&gt;而技能的等级，其实就是你的掌握程度&lt;/p&gt;
&lt;p&gt;想在社会上谋生的话，你必须要熟练掌握某种，独特的技能，从而获得报酬。&lt;br&gt;你需要找到自己感兴趣，擅长的技能，精进他。&lt;br&gt;</summary>
      
    
    
    
    <category term="关于" scheme="http://suyanblog.cn/categories/%E5%85%B3%E4%BA%8E/"/>
    
    
  </entry>
  
  <entry>
    <title>mqtt及阿里云物联网学习</title>
    <link href="http://suyanblog.cn/mqtt/"/>
    <id>http://suyanblog.cn/mqtt/</id>
    <published>2024-05-31T16:02:33.000Z</published>
    <updated>2024-06-11T16:47:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近在准备嵌入式大赛的项目，需要用到多端的数据传输。本地可以使用usart传参，云端与设备之间则利用阿里云平台借助mqtt协议进行收发数据。<br>因为我们的项目还涉及图像传输，所以我们没有使用资料更多的esp8266模块而是选用自带摄像头的esp32-cam。</p><h2 id="1-mqtt物联网通讯"><a href="#1-mqtt物联网通讯" class="headerlink" title="1.mqtt物联网通讯"></a>1.mqtt物联网通讯</h2><p>esp32-cam端部署(c&#x2F;c++)：</p><p>通过使用<a href="https://blog.csdn.net/qq_43064082/article/details/105999645">aliyunmqtt库</a>，订阅目标产品设备的topic，从而接受来自目标产品设备发布的内容。同时通过topic可以发送json格式的信息，云端在接收以后通过格式解析出信息，从而达到收发的目的。<br>多个设备之间的传输则需要使用云产品流转，云产品流转类型的规则可以对设备上报的数据进行简单处理，并将处理后的数据流转到其他 Topic 或阿里云产品。<br>发送端则需要通过处理数据topic发送信息，而接收端则需要订阅转发数据topic从而接收发送信息。<br><img src="https://www.freeimg.cn/i/2024/06/11/66680c7169c11.png" alt="1.png"><br>概念理解：<br>产品：<br>设备：<br>topic订阅：<br>产品云流转：</p><h2 id="maixcam端-python"><a href="#maixcam端-python" class="headerlink" title="maixcam端(python):"></a>maixcam端(python):</h2><p>1.阿里云物联网平台提供的python sdk 第三方库 aliyun-iot-linkkit，可惜由于不明原因，本地部署一直无法跟云端连接，即使是用官方例程也不行，遂放弃。<br><a href="https://help.aliyun.com/zh/iot/developer-reference/python-link-sdk-1">阿里云Python Link SDK</a></p><p>刚才才看到，官方要求1.61，可能是paho-mqtt版本问题，当时没注意装的最新的2.10。</p><p>2.后来用paho-mqtt，版本是1.61，内容比阿里云官方的更简洁，配置完三个参数即可使用，<a href="https://help.aliyun.com/zh/iot/use-cases/use-the-paho-mqtt-library-for-python-to-connect-a-device-to-iot-platform">Paho-MQTT Python接入示例</a></p><h2 id="上位机-微信小程序-："><a href="#上位机-微信小程序-：" class="headerlink" title="上位机(微信小程序)："></a>上位机(微信小程序)：</h2><p>我们的重点并不在前端上，所以为了节约开发时间与成本，我们选择了微信小程序作为我们的上位机。<br>mqtt部署资料参考<a href="https://blog.csdn.net/ngl272/article/details/87887885">微信小程序使用MQTT.js连接阿里云IoT物联网平台</a>。</p><p>2.图传</p><p>最开始是espcam做图传，因为自带摄像头，价格相对也比较亲民，资料相对也多，开发(抄)的成本会低很多。<br>包括图传，esp跟微信小程序都有例程可以直接用。</p><p>功能都实现之后，感觉ov2640的摄像头太糊了，打算转用maixcam，这时候我才发现图传涉及的知识太多了。<br>flask，flv，rtmp，http流，以及图像数据的解析与发送，与上位机之间的交换等等。<br>图传内容太多了，挖个坑后面填</p><p>等后面都做完了，会把代码开源学习。</p><h2 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h2><p><a href="https://blog.csdn.net/qq_43064082/article/details/105999645">ESP32 arduino方式连接阿里云</a><br><a href="www.bilibili.com/video/BV1EC411z71i">【3.微信小程序部分(已更完)】毕设：STM32+ESP8266-01S+阿里云+微信小程序 实现智能家居</a><br><a href="https://blog.csdn.net/ngl272/article/details/87887885">微信小程序使用MQTT.js连接阿里云IoT物联网平台</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近在准备嵌入式大赛的项目，需要用到多端的数据传输。本地可以使用usart传参，云端与设备之间则利用阿里云平台借助mqtt协议进行收发数据。&lt;br&gt;因为我们的项目还涉及图像传输，所以我们没有使用资料更多的esp8266模块而是选用自带摄像头的esp32-cam。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="嵌入式" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="物联网" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    <category term="图传" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%89%A9%E8%81%94%E7%BD%91/%E5%9B%BE%E4%BC%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>Maixcam本地部署训练</title>
    <link href="http://suyanblog.cn/maixcam1/"/>
    <id>http://suyanblog.cn/maixcam1/</id>
    <published>2024-05-25T00:00:00.000Z</published>
    <updated>2024-05-25T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>整合了多方资料，作为流程补充<br>部署流程仅作参考，请多方参考寻找适合自己环境的部署方法，有问题还请斧正</p><hr><h2 id="1-YOLOv5本地部署训练自建数据集"><a href="#1-YOLOv5本地部署训练自建数据集" class="headerlink" title="1.YOLOv5本地部署训练自建数据集"></a>1.YOLOv5本地部署训练自建数据集</h2><p>用的是YOLO格式的数据集，<br>标注采用labelimg<br><img src="https://www.freeimg.cn/i/2024/05/25/6651c365b898b.png" alt="cam7.png"></p><p>环境配置<br>anaconda python 3.8.19<br>cuda：12.4<br>显卡：3060 laptop 6g<br>驱动版本551.76</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/ultralytics/yolov5</span><br><span class="line">cd yolov5</span><br><span class="line">pip install -r requirements.txt</span><br><span class="line">pip install onnx</span><br></pre></td></tr></table></figure><p>安装完成后，建议删除cpu版本的pytorch，使用gpu版本,训练会快一点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip uninstall torch</span><br><span class="line">pip uninstall torchvision</span><br></pre></td></tr></table></figure><p>以下为GPU版本的pytorch安装，安装前请检查cuda版本是否适配</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install torch==2.1.1 torchvision==0.16.1 torchaudio==2.1.1 --index-url https://download.pytorch.org/whl/cu121</span><br></pre></td></tr></table></figure><p>装完打开yolo5文件夹内train.py<br>滑到最下面改一下目录，运行即可开始训练<br><img src="https://www.freeimg.cn/i/2024/05/25/6651c48163c8d.png" alt="cam8.png"></p><p>训练参数没动过，有需求的话可以调，保证weights，cfg，data地址对就行<br>具体参数其他帖子有解释了，这里不过多赘述</p><p>使用export.py将.pt文件转为.onnx</p><p>图像尺寸注意改为224 320 没试过其他尺寸，有兴趣可以试试</p><p>通过网址输入 netron.app 查看.onnx模型的三个输出<br>这里可能每个模型都不一样，后面模型量化时候需要用<br><img src="https://www.freeimg.cn/i/2024/05/25/66519ecc6a0ed.png" alt="cam1.png"><br>如下，这是我自定义数据集训练模型的输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/model.24/m.0/Conv_output_0</span><br><span class="line">/model.24/m.1/Conv_output_0</span><br><span class="line">/model.24/m.2/Conv_output_0 </span><br></pre></td></tr></table></figure><h2 id="2-Docker环境配置"><a href="#2-Docker环境配置" class="headerlink" title="2.Docker环境配置"></a>2.Docker环境配置</h2><p>接下来就需要在docker容器里进行操作了</p><p>TPU-MLIR需要在Docker环境开发，可以直接下载docker镜像(速度比较慢),参考如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull sophgo/tpuc_dev:latest</span><br></pre></td></tr></table></figure><p>或者可以从【TPU工具链工具包】中下载的docker镜像(速度比较快)，然后进行加载docker</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker load -i  docker_tpuc_dev_v3.2.tar.gz</span><br></pre></td></tr></table></figure><p>离线包下载地址，可以用<a href="https://winscp.net/eng/index.php">winscp</a>下载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sftp://218.17.249.213</span><br><span class="line">username: cvitek_mlir_2023</span><br><span class="line">password: 7&amp;2Wd%cu5k</span><br></pre></td></tr></table></figure><p>如果是首次使用Docker，可以执行下述命令进行安装和配置（仅首次执行）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install docker.io</span><br><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl enable docker</span><br><span class="line">sudo groupadd docker</span><br><span class="line">sudo usermod -aG docker $USER</span><br><span class="line">newgrp docker</span><br></pre></td></tr></table></figure><p>【进入docker环境】 确保安装包在当前目录，然后在当前目录创建容器如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --privileged --name MYNAME -v $PWD:/workspace -it sophgo/tpuc_dev:latest</span><br></pre></td></tr></table></figure><p><img src="https://www.freeimg.cn/i/2024/05/25/6651bc4ac27f8.png" alt="cam6.png"><br>MYNAME 是容器名字，自己自定义就可以</p><h2 id="3-TPU-MLIR量化环境搭建"><a href="#3-TPU-MLIR量化环境搭建" class="headerlink" title="3.TPU-MLIR量化环境搭建"></a>3.TPU-MLIR量化环境搭建</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/sophgo/tpu-mlir/releases/tag/v1.7</span><br><span class="line">上面网址下载</span><br><span class="line">tpu-mlir-resource.tar 和 tpu_mlir-1.7-py3-none-any.whl </span><br></pre></td></tr></table></figure><p>放在你进容器时候所在的文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install tpu_mlir-1.7-py3-none-any.whl</span><br><span class="line">安装它的全部依赖</span><br><span class="line">pip install tpu_mlir-1.7-py3-none-any.whl[all] </span><br></pre></td></tr></table></figure><p>再新建一个文件夹用来存放测试图片和onnx模型<br><img src="https://www.freeimg.cn/i/2024/05/25/6651b0d1664c6.png" alt="cam2.png"></p><p>然后就可以开始量化模型了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">执行下面命令ONNX 转 MLIR（记得output_names换为自己模型的输出，文件位置也需要根据自己情况来）</span><br><span class="line">model_transform \</span><br><span class="line">--model_name yolov5s \</span><br><span class="line">--model_def num1.onnx \</span><br><span class="line">--input_shapes [[1,3,224,320]] \</span><br><span class="line">--mean 0.0,0.0,0.0 \</span><br><span class="line">--scale 0.0039216,0.0039216,0.0039216 \</span><br><span class="line">--keep_aspect_ratio \</span><br><span class="line">--pixel_format rgb \</span><br><span class="line">--output_names /model.24/m.0/Conv_output_0,/model.24/m.1/Conv_output_0,/model.24/m.2/Conv_output_0 \</span><br><span class="line">--test_input images/num.png \</span><br><span class="line">--test_result yolov5s_top_outputs.npz \</span><br><span class="line">--mlir yolov5s.mlir</span><br><span class="line"></span><br><span class="line">执行下面命令MLIR 转 INT8 模型，转 INT8 模型前需要跑 calibration, 得到校准表</span><br><span class="line">run_calibration.py yolov5s.mlir \</span><br><span class="line">    --dataset images \</span><br><span class="line">    --input_num 100 \</span><br><span class="line">    -o yolov5s_cali_table</span><br><span class="line"></span><br><span class="line">接着执行下面</span><br><span class="line">model_deploy \</span><br><span class="line">--mlir yolov5s.mlir \</span><br><span class="line">--quantize INT8 \</span><br><span class="line">--calibration_table yolov5s_cali_table \</span><br><span class="line">--processor cv181x \</span><br><span class="line">--test_input yolov5s_in_f32.npz \</span><br><span class="line">--test_reference yolov5s_top_outputs.npz \</span><br><span class="line">--tolerance 0.85,0.45 \</span><br><span class="line">--model yolov5s_cv181x_int8_sym.cvimodel</span><br></pre></td></tr></table></figure><p><img src="https://www.freeimg.cn/i/2024/05/25/6651bc4aec3e8.jpg" alt="cam5.jpg"></p><p><strong>yolov5s_cv181x_int8_sym.cvimodel</strong></p><p>这是我们需要的模型</p><h2 id="4-模型测试"><a href="#4-模型测试" class="headerlink" title="4.模型测试"></a>4.模型测试</h2><p>yolov5s_num1.mud内容如下，各位别忘了改label跟model名字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[basic]</span><br><span class="line">type = cvimodel</span><br><span class="line">model = yolov5s_num1_cv181x_int8_sym.cvimodel</span><br><span class="line"></span><br><span class="line">[extra]</span><br><span class="line">model_type = yolov5</span><br><span class="line">input_type = rgb</span><br><span class="line">mean = 0, 0, 0</span><br><span class="line">scale = 0.00392156862745098, 0.00392156862745098, 0.00392156862745098</span><br><span class="line">anchors = 10,13, 16,30, 33,23, 30,61, 62,45, 59,119, 116,90, 156,198, 373,326</span><br><span class="line">labels = one,two,three,four,five,six,seven,eight,nine,zero</span><br></pre></td></tr></table></figure><p>运行代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">from maix import camera, display, image, nn, app</span><br><span class="line"></span><br><span class="line">detector = nn.YOLOv5(model=&quot;/root/models/yolov5s_num1.mud&quot;)</span><br><span class="line">cam = camera.Camera(detector.input_width(), detector.input_height(), detector.input_format())</span><br><span class="line">dis = display.Display()</span><br><span class="line">print(&quot;www&quot;)</span><br><span class="line">print(detector.input_width(),detector.input_height(), detector.input_format())</span><br><span class="line"></span><br><span class="line">while not app.need_exit():</span><br><span class="line">    img = cam.read()</span><br><span class="line">    objs = detector.detect(img, conf_th = 0.5, iou_th = 0.45)</span><br><span class="line">    for obj in objs:</span><br><span class="line">        img.draw_rect(obj.x, obj.y, obj.w, obj.h, color = image.COLOR_RED)</span><br><span class="line">        msg = f&#x27;&#123;detector.labels[obj.class_id]&#125;: &#123;obj.score:.2f&#125;&#x27;</span><br><span class="line">        img.draw_string(obj.x, obj.y, msg, color = image.COLOR_RED)</span><br><span class="line">    dis.show(img)</span><br></pre></td></tr></table></figure><p>连接cam跟电脑，把cvmodel和mud上传到&#x2F;root&#x2F;models&#x2F; 路径下<br><img src="https://www.freeimg.cn/i/2024/05/25/6651b8269c579.png" alt="cam3.png"><br>实机运行如图<br><img src="https://www.freeimg.cn/i/2024/05/25/6651b876660c7.jpg" alt="cam4.jpg"><br>感觉可玩性很高啊，等期末考完猛猛把玩一手</p><p>部分参考资料：<br><a href="https://wiki.sipeed.com/maixpy/doc/zh/vision/custmize_model.html">MaixPy 自定义（离线训练） AI 模型和运行</a><br><a href="https://tpumlir.org/docs/quick_start/09_cv18xx_guide.html#yolov5">CV18xx芯片使用指南</a><br><a href="https://tpumlir.org/docs/quick_start/03_onnx.html">yolov5编译ONNX模型</a><br><a href="https://doc.sophgo.com/cvitek-develop-docs/master/docs_latest_release/CV180x_CV181x/zh/01.software/TPU/YOLO_Development_Guide/build/html/3_Yolov5_development.html">通用yolov5模型部署</a><br><a href="https://blog.csdn.net/u013171226/article/details/135816063">利用tpu-mlir工具将深度学习算法模型转成算能科技平台.bmodel模型的方法步骤</a><br><a href="https://doc.sophgo.com/sdk-docs/v23.09.01-lts/docs_latest_release/docs/tpu-mlir/quick_start/html/07_quantization.html">量化与量化调优</a><br><a href="https://forum.sophgo.com/t/yolov5-detection-on-milk-v-duo/246">Yolov5 Detection On Milk-v Duo</a><br><a href="https://forum.sophgo.com/t/cv181x-180x-isp/297">CV181x&#x2F;180x ISP 调试经验总结</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;整合了多方资料，作为流程补充&lt;br&gt;部署流程仅作参考，请多方参考寻找适合自己环境的部署方法，有问题还请斧正&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;1-YOLOv5本地部署训练自建数据集&quot;&gt;&lt;a href=&quot;#1-YOLOv5本地部署训练自建数据集&quot; class=&quot;headerl</summary>
      
    
    
    
    <category term="嵌入式" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="maixpy" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/maixpy/"/>
    
    
  </entry>
  
  <entry>
    <title>木了</title>
    <link href="http://suyanblog.cn/daily8/"/>
    <id>http://suyanblog.cn/daily8/</id>
    <published>2024-05-16T17:48:32.000Z</published>
    <updated>2024-05-16T17:48:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近基本都在高强度调项目，调的人有点麻<br>突然就感觉到上班的感觉，真的很差。</p><p>无论是精神还是身体，都很疲惫。没有其他的想法了，最近一段时间想法都没了，博客都没更。现在只想快做完早下班，玩会游戏早休息。拿着奶头乐与压力对冲，圈子渐渐固化，想法越来越少，然后成了自己嗤之以鼻思维固化的中年人。<br>被生活绑架？被社会绑架，你不干有的是人干</p><p>我有时候就在想，既然就业前景都这么烂了，工作当一辈子房奴，为什么不把大学四年all in 在创业上呢？</p><p>是沉没成本太高了吗？<br>是有效信息拿的太少了吗？  –你都没参与过，哪来的信息。<br>是资金问题吗？ –钱其实好像是最不需要的东西。<br>是资源太少吗？ –资源是一步一步积累起来的，人脉，渠道。<br>是没机会吗？ –但其实机会是需要自己去找的，就跟对象一样，连找都没找哪来的机会。<br>是执行力问题吧，总是觉得，要是失败的话，花在这个项目上的时间不就全部浪费了，所以宁愿把时间花在教育，这种看起来稳定收益的行业上。</p><p>有人有资源，但不知道怎么卖出去<br>有人有需求，但不知道去哪找人做</p><p>我们有时候就得把握这种关系。有时候总得往下看，做下沉市场。</p><p>总是想着以后做，因为以后时间的我，一定比现在的我更有经验，更有可能成功，所以有了一个想法之后，就一直 拖啊拖，就拖忘了。所以想法一定要记下来，一定要去做做试试！！</p><p>感觉教育行业是暴利啊，高考，专升本，考研，考公。在蛋糕进一步分割的未来，孩子们只能更卷，我们刚好可以去卖铲子，在教育，或者是自己的专业领域，就像朋友圈的那位。<br>有人不会宣传包装，有人没有技术。我都可以做，我可以整合我的资源做到这一点，这不就行了。</p><p>先相信</p><p>一定要多去接触新鲜事物，固步自封就完犊子了。<br>就得改变，谁不在改变啊，我也在改变，改变就得应该，而不是不改变。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近基本都在高强度调项目，调的人有点麻&lt;br&gt;突然就感觉到上班的感觉，真的很差。&lt;/p&gt;
&lt;p&gt;无论是精神还是身体，都很疲惫。没有其他的想法了，最近一段时间想法都没了，博客都没更。现在只想快做完早下班，玩会游戏早休息。拿着奶头乐与压力对冲，圈子渐渐固化，想法越来越少，然后成</summary>
      
    
    
    
    <category term="日常" scheme="http://suyanblog.cn/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>差一点就差很多啊</title>
    <link href="http://suyanblog.cn/daily9/"/>
    <id>http://suyanblog.cn/daily9/</id>
    <published>2024-05-04T13:12:32.000Z</published>
    <updated>2024-05-04T13:12:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天是五月四号下午一点，按照计划，现在的我应该在上海回青岛的路上<br>但是事实上，我现在刚躺在床上睡醒，不知所措的对着电脑讲述这段故事<br>早上赶车时候，本以为一个小时满满当当，因为只需要坐八站地铁，但事实是，因为疏忽大意，在换乘时候反方向坐了一站，再加上本身地铁跟高铁站也有一段距离，导致我直接错过了火车。<br>最遗憾的是前一分钟坐扶梯大厅屏幕上还在检票，当我到检票口时候，刚好停检。</p><p>只能说，差一点就差很多。于事无补只能改签六号的票<br>假如我早上出门早点，假如我没有坐错一站，假如我直接坐四号线不去等三号线..我事后这样想</p><p>但其实这些都是导致迟到的客观因素，我再怎么想也不会改变结果。<br>我们应该去想，如何避免这种事情发生，总结出规律性的经验。</p><p>比如在接触陌生环境时，请一定要留够<strong>容错</strong>，毕竟很多时候我们对事物的认识并不充分，它的发展不一定就会按照我们的想法。当出现意料之外的事情时候可能就被打个措手不及，所以一定要留好<strong>犯错</strong>的空间。<br>资料也要常常备份，东西买双不买单，尽量减少意外带来的损失。</p><p>差一点的事情有很多啊，<br>高中时候考试，差一点考过谁，有道题差一点做对，或者是游戏差一点就打过了。<br>生活中充满了差一点，所以我们每时每刻都是要做好，杜绝敷衍，至少在失败之后，告诉自己至少努力过了。</p><p>其实就算是改签了，又有什么关系呢，生活总还得过下去对吧，坐下来休息休息，计划好下一步吧。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天是五月四号下午一点，按照计划，现在的我应该在上海回青岛的路上&lt;br&gt;但是事实上，我现在刚躺在床上睡醒，不知所措的对着电脑讲述这段故事&lt;br&gt;早上赶车时候，本以为一个小时满满当当，因为只需要坐八站地铁，但事实是，因为疏忽大意，在换乘时候反方向坐了一站，再加上本身地铁跟高铁</summary>
      
    
    
    
    <category term="日常" scheme="http://suyanblog.cn/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>警惕消费主义陷阱</title>
    <link href="http://suyanblog.cn/daily10/"/>
    <id>http://suyanblog.cn/daily10/</id>
    <published>2024-04-19T20:12:32.000Z</published>
    <updated>2024-04-19T20:12:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>尤其是<br>电子产品<br>车子<br>房子<br>贬值太快了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;尤其是&lt;br&gt;电子产品&lt;br&gt;车子&lt;br&gt;房子&lt;br&gt;贬值太快了&lt;/p&gt;
</summary>
      
    
    
    
    <category term="日常" scheme="http://suyanblog.cn/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>如何在大学正确学习</title>
    <link href="http://suyanblog.cn/howstudy/"/>
    <id>http://suyanblog.cn/howstudy/</id>
    <published>2024-04-03T14:43:23.000Z</published>
    <updated>2024-04-03T14:43:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何在大学正确学习"><a href="#如何在大学正确学习" class="headerlink" title="如何在大学正确学习"></a>如何在大学正确学习</h1><h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>我在写这个时候，首先联想到的就是 交大生存手册。</p><p>这本手册我在大一时候就读过了，可惜当时对大学的认识还不够，以至于没有对我形成经验性的指导，直到有些地方自己踩坑了，才得以正确认识。这可能就是所谓的“人教人，教不会，事教人，一次会”。</p><h2 id="正文："><a href="#正文：" class="headerlink" title="正文："></a>正文：</h2><p>之前总是觉得，学的越多越好，自己总是觉得，哇我今天又知道了什么什么东西，他们都不会，我草我真吊。</p><p>但其实有些东西压根没必要去学，或者是花很多时间去学</p><p>人的时间与精力是有限的，但是知识是无限的。</p><p>你可能会说，我对某些方面很感兴趣，好那我去学。这自然是一件极好的事情，但是请谨记，不要<strong>沉迷于此</strong> 。</p><p>这种情况在一些竞赛或者是实验室较为常见，但是无论是竞赛还是实验室，他只是在大学里，只是一个暂时态，离开了大学就什么也不是了。</p><p>所以我们要尽可能的把精力花费在一些<strong>远期目标</strong>上。这里远期目标指的是那些能够长期的，在你的人生中使你受益，且不会随时间贬值的东西。</p><p>比如研究生学历，英语能力，或者是认识世界的方式，思维能力的提升。</p><p>总之，学习一定要是以<strong>目标</strong>为导向，做到有针对性的学习，没那么重要的其他部分摸摸鱼过了就行。</p><h2 id="后记："><a href="#后记：" class="headerlink" title="后记："></a>后记：</h2><p>如果你是刚入学的新生，请一定要去读一遍上交生存手册，并以此为经验修正你对大学的认识。<br>大学之前你的人生阶段是线性固定的，但是大学以后就是自由的了，请务必学会认识世界。</p><p>一定要先立志，你的目标是什么，保研or考研，想清楚目标，如果不确定就是尝试还不够，信息输入太少了，目标的确立是一个长期的过程，是你大量的思考与经历得出的结果，尽可能早的确立正确的方向。过早则会因为经验样本太少导致结果不正确，过晚则会导致大学时间所剩无几。种一棵树最好的时间是十年前，其次是现在。</p><p>其次就是改变思考方式，做到客观的认识事物，认识这个世界。</p><p>多走出去接触不同的人，不同圈子或者是不同阶级的人，这会有助于你客观认识世界，最后明确方向。</p><p>在大学之前，我们只是在被动学习，你只需要老实上课便可得到一个不错的成绩。但是大学没有老师的指导，你需要学会学习，纠正你的思维，做到对事物的客观认识。如果你没有显赫的背景，出身草根的话，那么请务必多尝试，多试错。因为你的家庭不会给你经验性的指导让你避免犯错，有的话大概率也是错的，能靠得住的只有你自己。  </p><p>这个题目我想了很久，今天偶然顿悟，为时不算太晚，仅以此记。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;如何在大学正确学习&quot;&gt;&lt;a href=&quot;#如何在大学正确学习&quot; class=&quot;headerlink&quot; title=&quot;如何在大学正确学习&quot;&gt;&lt;/a&gt;如何在大学正确学习&lt;/h1&gt;&lt;h2 id=&quot;前言：&quot;&gt;&lt;a href=&quot;#前言：&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="如何" scheme="http://suyanblog.cn/categories/%E5%A6%82%E4%BD%95/"/>
    
    
  </entry>
  
  <entry>
    <title>【F103C8T6+HAL】一阶倒立摆</title>
    <link href="http://suyanblog.cn/swing/"/>
    <id>http://suyanblog.cn/swing/</id>
    <published>2024-03-31T20:26:20.000Z</published>
    <updated>2024-04-03T11:47:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>配置：F103C8T6+CUBEMX+HAL库</p><p>倒立摆作为经典的控制问题</p><p>可以拆解成两项<br>起摆跟立摆<br>起摆的逻辑并不难分析，只需要保证杆在左侧时候滑块右拉，右侧左拉即可完成起摆</p><p>难点在于立摆<br>立摆涉及到摆角度与位置的控制<br>角度环保持摆直立，位置环保证摆不乱走</p><h2 id="角度环与位置环"><a href="#角度环与位置环" class="headerlink" title="角度环与位置环"></a>角度环与位置环</h2><p>如果只闭一个角度环，可以立摆，但是不能纠正摆的位置，立摆之后会朝一个方向猛冲，造成电机追不上摆的假象。如果连立摆都做不到可能是电机转速太慢，</p><p>这时候就需要考虑闭第二个环。两个环控制涉及到串并级，以及控制周期的问题。</p><p>我们最早是做的并级，角度环位置环共同控制摆，但是效果并不理想。角度环调大了位置环没作用，位置环调大了不能立摆。<br>最后换了串级，角度环作为内环，用位置环返回的数字去修正角度的输入值。效果很显著，摆开始震荡，解决了摆方向的问题。</p><p>但是这时候摆的速度还是递增的，摆的震荡并不收敛。</p><p>解决方法是，在摆第一次震荡之前，速度较低的时候，重置位置环的位置，保证摆在震荡时候始终是减速的，摆的速度会越来越慢，达成收敛</p><h2 id="控制周期"><a href="#控制周期" class="headerlink" title="控制周期"></a>控制周期</h2><p>当时摆控制周期为0.1ms，角度环中断周期是0.5ms 位置环为5ms，后来才发现这应该是个错误。<br>首先定时器能不能达到0.1ms的精度，这是有待商榷的。<br>其次摆的控制周期小于角度环的输出周期，这是非常不合理的，理论上应该是控制周期小于角度环的输出周期。但是最后没什么影响，以后要注意这一点。</p><h2 id="杂七杂八"><a href="#杂七杂八" class="headerlink" title="杂七杂八"></a>杂七杂八</h2><p>电位器采集采用了平滑滤波算法，相较于平均值滤波，角度的变化更为平滑，在一定程度上可以抑制周期性干扰</p><p>中间还涉及数据采集误差的问题，比如电位器临界值突变等。<br>能在硬件上解决的问题就不要代码解决。</p><p>感觉分析问题，解决问题的能力有待提高</p><p>视频效果：<a href="https://www.bilibili.com/video/BV1JJ4m1576Y/">倒立摆</a><br>夸盘源码：<a href="https://pan.quark.cn/s/d57c75ea0188">Swing</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;配置：F103C8T6+CUBEMX+HAL库&lt;/p&gt;
&lt;p&gt;倒立摆作为经典的控制问题&lt;/p&gt;
&lt;p&gt;可以拆解成两项&lt;br&gt;起摆跟立摆&lt;br&gt;起摆的逻辑并不难分析，只需要保证杆在左侧时候滑块右拉，右侧左拉即可完成起摆&lt;/p&gt;
&lt;p&gt;难点在于立摆&lt;br&gt;立摆涉及到摆角度与位置</summary>
      
    
    
    
    <category term="嵌入式" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="电赛" scheme="http://suyanblog.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%94%B5%E8%B5%9B/"/>
    
    
  </entry>
  
  <entry>
    <title>DGXI截图-YOLOv8-C++部署-trt</title>
    <link href="http://suyanblog.cn/yolo_trt/"/>
    <id>http://suyanblog.cn/yolo_trt/</id>
    <published>2024-03-25T17:04:20.000Z</published>
    <updated>2024-03-25T17:04:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>很久之前刚接触深度学习跟opencv时候，就萌生了做一个ai自瞄的想法，可惜当时很忙，计划便被搁置了<br>近日终于有了时间，便将想法变现<br>网上资料找到的最优解好像是dgxi+yolov5c++部署+trt，但是yoloV8好像也不错，便去git上找到了源码<a href="https://github.com/wang-xinyu/tensorrtx">wang-xinyu&#x2F;tensorrtx</a>，可惜后来的部署并不顺利，Cmake的使用，以及lld文件的打包，还有模型转换之间的问题。后来实在没有头绪了，便去git上找到的大佬的整合版本<a href="https://github.com/Monday-Leo/YOLOv8_Tensorrt">Monday-Leo&#x2F;YOLOv8_Tensorrt</a>。有了之前部署的经验，配合上整合包部署的很顺利。</p><p>效果视频:<a href="https://www.bilibili.com/video/BV1ux421Q7un">强的不是我，是yoloV8</a></p><p>但这仅仅只是入门，并没有从源码或者是原理上去理解yolo与trt，还有dgxi截图的原理。<br>包括神经网络的构建，以及算法的实现，工程的构成。真正的内核还没学。</p><p>等后面如果有机会的话，再去做吧</p><p>用于实战还存在许多问题，比如识别精度不高，存在识别错误的情况。</p><p>自带pt-&gt;wts-&gt;engine &#x2F;&#x2F;只能预测转官方的训练模型，自己练出来的不能进行.exe预测<br>后来就用py引导dll<br>用yolo官方pt转engine 有点问题不排除是模型问题所以 试了试pt官方转onnx，TR官方转engine&#x2F;trt  还是有问题，应该是神经网络的原因</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;很久之前刚接触深度学习跟opencv时候，就萌生了做一个ai自瞄的想法，可惜当时很忙，计划便被搁置了&lt;br&gt;近日终于有了时间，便将想法变现&lt;br&gt;网上资料找到的最优解好像是dgxi+yolov5c++部署+trt，但是yoloV8好像也不错，便去git上找到了源码&lt;a hr</summary>
      
    
    
    
    <category term="解决方案" scheme="http://suyanblog.cn/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    <category term="python" scheme="http://suyanblog.cn/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/python/"/>
    
    
  </entry>
  
</feed>
